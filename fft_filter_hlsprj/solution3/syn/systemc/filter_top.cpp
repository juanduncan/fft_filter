// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "filter_top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<11> filter_top::ap_const_lv11_0 = "00000000000";
const sc_logic filter_top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<64> filter_top::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_logic filter_top::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<2> filter_top::ap_const_lv2_0 = "00";
const sc_lv<2> filter_top::ap_const_lv2_1 = "1";
const bool filter_top::ap_const_boolean_1 = true;

filter_top::filter_top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dummy_proc_fe_U0 = new dummy_proc_fe("dummy_proc_fe_U0");
    dummy_proc_fe_U0->ap_clk(ap_clk);
    dummy_proc_fe_U0->ap_rst(ap_rst);
    dummy_proc_fe_U0->ap_start(dummy_proc_fe_U0_ap_start);
    dummy_proc_fe_U0->ap_done(dummy_proc_fe_U0_ap_done);
    dummy_proc_fe_U0->ap_continue(dummy_proc_fe_U0_ap_continue);
    dummy_proc_fe_U0->ap_idle(dummy_proc_fe_U0_ap_idle);
    dummy_proc_fe_U0->ap_ready(dummy_proc_fe_U0_ap_ready);
    dummy_proc_fe_U0->config_fwd_data_V_din(dummy_proc_fe_U0_config_fwd_data_V_din);
    dummy_proc_fe_U0->config_fwd_data_V_full_n(fft_config_fwd_data_s_full_n);
    dummy_proc_fe_U0->config_fwd_data_V_write(dummy_proc_fe_U0_config_fwd_data_V_write);
    dummy_proc_fe_U0->config_inv_data_V_din(dummy_proc_fe_U0_config_inv_data_V_din);
    dummy_proc_fe_U0->config_inv_data_V_full_n(fft_config_inv_data_s_full_n);
    dummy_proc_fe_U0->config_inv_data_V_write(dummy_proc_fe_U0_config_inv_data_V_write);
    dummy_proc_fe_U0->in_r_dout(in_r_dout);
    dummy_proc_fe_U0->in_r_empty_n(in_r_empty_n);
    dummy_proc_fe_U0->in_r_read(dummy_proc_fe_U0_in_r_read);
    dummy_proc_fe_U0->input_xn2_address0(dummy_proc_fe_U0_input_xn2_address0);
    dummy_proc_fe_U0->input_xn2_ce0(dummy_proc_fe_U0_input_xn2_ce0);
    dummy_proc_fe_U0->input_xn2_q0(inxn2_q0);
    dummy_proc_fe_U0->output_xn1_din(dummy_proc_fe_U0_output_xn1_din);
    dummy_proc_fe_U0->output_xn1_full_n(xn_channel_full_n);
    dummy_proc_fe_U0->output_xn1_write(dummy_proc_fe_U0_output_xn1_write);
    dummy_proc_fe_U0->output_xn2_din(dummy_proc_fe_U0_output_xn2_din);
    dummy_proc_fe_U0->output_xn2_full_n(xn2_channel_full_n);
    dummy_proc_fe_U0->output_xn2_write(dummy_proc_fe_U0_output_xn2_write);
    fft_config1_U0 = new fft_config1_s("fft_config1_U0");
    fft_config1_U0->ap_clk(ap_clk);
    fft_config1_U0->ap_rst(ap_rst);
    fft_config1_U0->ap_start(fft_config1_U0_ap_start);
    fft_config1_U0->ap_ce(ap_var_for_const0);
    fft_config1_U0->ap_done(fft_config1_U0_ap_done);
    fft_config1_U0->ap_idle(fft_config1_U0_ap_idle);
    fft_config1_U0->ap_ready(fft_config1_U0_ap_ready);
    fft_config1_U0->xn_dout(xn_channel_dout);
    fft_config1_U0->xn_empty_n(xn_channel_empty_n);
    fft_config1_U0->xn_read(fft_config1_U0_xn_read);
    fft_config1_U0->xk_din(fft_config1_U0_xk_din);
    fft_config1_U0->xk_full_n(xk_channel_full_n);
    fft_config1_U0->xk_write(fft_config1_U0_xk_write);
    fft_config1_U0->status_data_V_din(fft_config1_U0_status_data_V_din);
    fft_config1_U0->status_data_V_full_n(ap_var_for_const0);
    fft_config1_U0->status_data_V_write(fft_config1_U0_status_data_V_write);
    fft_config1_U0->config_ch_data_V_dout(fft_config_fwd_data_s_dout);
    fft_config1_U0->config_ch_data_V_empty_n(fft_config_fwd_data_s_empty_n);
    fft_config1_U0->config_ch_data_V_read(fft_config1_U0_config_ch_data_V_read);
    fft_config2_U0 = new fft_config2_s("fft_config2_U0");
    fft_config2_U0->ap_clk(ap_clk);
    fft_config2_U0->ap_rst(ap_rst);
    fft_config2_U0->ap_start(fft_config2_U0_ap_start);
    fft_config2_U0->ap_ce(ap_var_for_const0);
    fft_config2_U0->ap_done(fft_config2_U0_ap_done);
    fft_config2_U0->ap_idle(fft_config2_U0_ap_idle);
    fft_config2_U0->ap_ready(fft_config2_U0_ap_ready);
    fft_config2_U0->xn_dout(xn2_channel_dout);
    fft_config2_U0->xn_empty_n(xn2_channel_empty_n);
    fft_config2_U0->xn_read(fft_config2_U0_xn_read);
    fft_config2_U0->xk_din(fft_config2_U0_xk_din);
    fft_config2_U0->xk_full_n(xk2_channel_full_n);
    fft_config2_U0->xk_write(fft_config2_U0_xk_write);
    fft_config2_U0->status_data_V_din(fft_config2_U0_status_data_V_din);
    fft_config2_U0->status_data_V_full_n(ap_var_for_const0);
    fft_config2_U0->status_data_V_write(fft_config2_U0_status_data_V_write);
    fft_config2_U0->config_ch_data_V_dout(fft_config_inv_data_s_dout);
    fft_config2_U0->config_ch_data_V_empty_n(fft_config_inv_data_s_empty_n);
    fft_config2_U0->config_ch_data_V_read(fft_config2_U0_config_ch_data_V_read);
    dummy_proc_be_U0 = new dummy_proc_be("dummy_proc_be_U0");
    dummy_proc_be_U0->ap_clk(ap_clk);
    dummy_proc_be_U0->ap_rst(ap_rst);
    dummy_proc_be_U0->ap_start(dummy_proc_be_U0_ap_start);
    dummy_proc_be_U0->ap_done(dummy_proc_be_U0_ap_done);
    dummy_proc_be_U0->ap_continue(dummy_proc_be_U0_ap_continue);
    dummy_proc_be_U0->ap_idle(dummy_proc_be_U0_ap_idle);
    dummy_proc_be_U0->ap_ready(dummy_proc_be_U0_ap_ready);
    dummy_proc_be_U0->coefs_address0(dummy_proc_be_U0_coefs_address0);
    dummy_proc_be_U0->coefs_ce0(dummy_proc_be_U0_coefs_ce0);
    dummy_proc_be_U0->coefs_q0(coefs_q0);
    dummy_proc_be_U0->input_xk1_dout(xk_channel_dout);
    dummy_proc_be_U0->input_xk1_empty_n(xk_channel_empty_n);
    dummy_proc_be_U0->input_xk1_read(dummy_proc_be_U0_input_xk1_read);
    dummy_proc_be_U0->input_xk2_dout(xk2_channel_dout);
    dummy_proc_be_U0->input_xk2_empty_n(xk2_channel_empty_n);
    dummy_proc_be_U0->input_xk2_read(dummy_proc_be_U0_input_xk2_read);
    dummy_proc_be_U0->output_xk1_address0(dummy_proc_be_U0_output_xk1_address0);
    dummy_proc_be_U0->output_xk1_ce0(dummy_proc_be_U0_output_xk1_ce0);
    dummy_proc_be_U0->output_xk1_we0(dummy_proc_be_U0_output_xk1_we0);
    dummy_proc_be_U0->output_xk1_d0(dummy_proc_be_U0_output_xk1_d0);
    dummy_proc_be_U0->out_r_din(dummy_proc_be_U0_out_r_din);
    dummy_proc_be_U0->out_r_full_n(out_r_full_n);
    dummy_proc_be_U0->out_r_write(dummy_proc_be_U0_out_r_write);
    fft_config_fwd_data_s_U = new fifo_w16_d2048_A("fft_config_fwd_data_s_U");
    fft_config_fwd_data_s_U->clk(ap_clk);
    fft_config_fwd_data_s_U->reset(ap_rst);
    fft_config_fwd_data_s_U->if_read_ce(ap_var_for_const0);
    fft_config_fwd_data_s_U->if_write_ce(ap_var_for_const0);
    fft_config_fwd_data_s_U->if_din(dummy_proc_fe_U0_config_fwd_data_V_din);
    fft_config_fwd_data_s_U->if_full_n(fft_config_fwd_data_s_full_n);
    fft_config_fwd_data_s_U->if_write(dummy_proc_fe_U0_config_fwd_data_V_write);
    fft_config_fwd_data_s_U->if_dout(fft_config_fwd_data_s_dout);
    fft_config_fwd_data_s_U->if_empty_n(fft_config_fwd_data_s_empty_n);
    fft_config_fwd_data_s_U->if_read(fft_config1_U0_config_ch_data_V_read);
    fft_config_inv_data_s_U = new fifo_w16_d2048_A("fft_config_inv_data_s_U");
    fft_config_inv_data_s_U->clk(ap_clk);
    fft_config_inv_data_s_U->reset(ap_rst);
    fft_config_inv_data_s_U->if_read_ce(ap_var_for_const0);
    fft_config_inv_data_s_U->if_write_ce(ap_var_for_const0);
    fft_config_inv_data_s_U->if_din(dummy_proc_fe_U0_config_inv_data_V_din);
    fft_config_inv_data_s_U->if_full_n(fft_config_inv_data_s_full_n);
    fft_config_inv_data_s_U->if_write(dummy_proc_fe_U0_config_inv_data_V_write);
    fft_config_inv_data_s_U->if_dout(fft_config_inv_data_s_dout);
    fft_config_inv_data_s_U->if_empty_n(fft_config_inv_data_s_empty_n);
    fft_config_inv_data_s_U->if_read(fft_config2_U0_config_ch_data_V_read);
    xn_channel_U = new fifo_w64_d1344_A("xn_channel_U");
    xn_channel_U->clk(ap_clk);
    xn_channel_U->reset(ap_rst);
    xn_channel_U->if_read_ce(ap_var_for_const0);
    xn_channel_U->if_write_ce(ap_var_for_const0);
    xn_channel_U->if_din(dummy_proc_fe_U0_output_xn1_din);
    xn_channel_U->if_full_n(xn_channel_full_n);
    xn_channel_U->if_write(dummy_proc_fe_U0_output_xn1_write);
    xn_channel_U->if_dout(xn_channel_dout);
    xn_channel_U->if_empty_n(xn_channel_empty_n);
    xn_channel_U->if_read(fft_config1_U0_xn_read);
    xn2_channel_U = new fifo_w64_d64_A("xn2_channel_U");
    xn2_channel_U->clk(ap_clk);
    xn2_channel_U->reset(ap_rst);
    xn2_channel_U->if_read_ce(ap_var_for_const0);
    xn2_channel_U->if_write_ce(ap_var_for_const0);
    xn2_channel_U->if_din(dummy_proc_fe_U0_output_xn2_din);
    xn2_channel_U->if_full_n(xn2_channel_full_n);
    xn2_channel_U->if_write(dummy_proc_fe_U0_output_xn2_write);
    xn2_channel_U->if_dout(xn2_channel_dout);
    xn2_channel_U->if_empty_n(xn2_channel_empty_n);
    xn2_channel_U->if_read(fft_config2_U0_xn_read);
    xk_channel_U = new fifo_w64_d64_A("xk_channel_U");
    xk_channel_U->clk(ap_clk);
    xk_channel_U->reset(ap_rst);
    xk_channel_U->if_read_ce(ap_var_for_const0);
    xk_channel_U->if_write_ce(ap_var_for_const0);
    xk_channel_U->if_din(fft_config1_U0_xk_din);
    xk_channel_U->if_full_n(xk_channel_full_n);
    xk_channel_U->if_write(fft_config1_U0_xk_write);
    xk_channel_U->if_dout(xk_channel_dout);
    xk_channel_U->if_empty_n(xk_channel_empty_n);
    xk_channel_U->if_read(dummy_proc_be_U0_input_xk1_read);
    xk2_channel_U = new fifo_w64_d64_A("xk2_channel_U");
    xk2_channel_U->clk(ap_clk);
    xk2_channel_U->reset(ap_rst);
    xk2_channel_U->if_read_ce(ap_var_for_const0);
    xk2_channel_U->if_write_ce(ap_var_for_const0);
    xk2_channel_U->if_din(fft_config2_U0_xk_din);
    xk2_channel_U->if_full_n(xk2_channel_full_n);
    xk2_channel_U->if_write(fft_config2_U0_xk_write);
    xk2_channel_U->if_dout(xk2_channel_dout);
    xk2_channel_U->if_empty_n(xk2_channel_empty_n);
    xk2_channel_U->if_read(dummy_proc_be_U0_input_xk2_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( dummy_proc_be_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( dummy_proc_fe_U0_ap_idle );
    sensitive << ( fft_config1_U0_ap_idle );
    sensitive << ( fft_config2_U0_ap_idle );
    sensitive << ( dummy_proc_be_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( dummy_proc_be_U0_ap_done );

    SC_METHOD(thread_ap_sync_dummy_proc_be_U0_ap_ready);
    sensitive << ( dummy_proc_be_U0_ap_ready );
    sensitive << ( ap_sync_reg_dummy_proc_be_U0_ap_ready );

    SC_METHOD(thread_ap_sync_dummy_proc_fe_U0_ap_ready);
    sensitive << ( dummy_proc_fe_U0_ap_ready );
    sensitive << ( ap_sync_reg_dummy_proc_fe_U0_ap_ready );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_dummy_proc_be_U0_ap_ready );
    sensitive << ( ap_sync_dummy_proc_fe_U0_ap_ready );

    SC_METHOD(thread_coefs_address0);
    sensitive << ( dummy_proc_be_U0_coefs_address0 );

    SC_METHOD(thread_coefs_ce0);
    sensitive << ( dummy_proc_be_U0_coefs_ce0 );

    SC_METHOD(thread_coefs_d0);

    SC_METHOD(thread_coefs_we0);

    SC_METHOD(thread_dummy_proc_be_U0_ap_continue);

    SC_METHOD(thread_dummy_proc_be_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_dummy_proc_be_U0_ap_ready );

    SC_METHOD(thread_dummy_proc_fe_U0_ap_continue);

    SC_METHOD(thread_dummy_proc_fe_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_dummy_proc_fe_U0_ap_ready );

    SC_METHOD(thread_in_r_read);
    sensitive << ( dummy_proc_fe_U0_in_r_read );

    SC_METHOD(thread_inxn2_address0);
    sensitive << ( dummy_proc_fe_U0_input_xn2_address0 );

    SC_METHOD(thread_inxn2_ce0);
    sensitive << ( dummy_proc_fe_U0_input_xn2_ce0 );

    SC_METHOD(thread_inxn2_d0);

    SC_METHOD(thread_inxn2_we0);

    SC_METHOD(thread_out_r_din);
    sensitive << ( dummy_proc_be_U0_out_r_din );

    SC_METHOD(thread_out_r_write);
    sensitive << ( dummy_proc_be_U0_out_r_write );

    SC_METHOD(thread_outxk1_address0);
    sensitive << ( dummy_proc_be_U0_output_xk1_address0 );

    SC_METHOD(thread_outxk1_ce0);
    sensitive << ( dummy_proc_be_U0_output_xk1_ce0 );

    SC_METHOD(thread_outxk1_d0);
    sensitive << ( dummy_proc_be_U0_output_xk1_d0 );

    SC_METHOD(thread_outxk1_we0);
    sensitive << ( dummy_proc_be_U0_output_xk1_we0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    fft_config1_U0_ap_start = SC_LOGIC_0;
    fft_config2_U0_ap_start = SC_LOGIC_0;
    ap_sync_reg_dummy_proc_be_U0_ap_ready = SC_LOGIC_0;
    dummy_proc_be_U0_ap_ready_count = "00";
    ap_sync_reg_dummy_proc_fe_U0_ap_ready = SC_LOGIC_0;
    dummy_proc_fe_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "filter_top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, coefs_address0, "(port)coefs_address0");
    sc_trace(mVcdFile, coefs_ce0, "(port)coefs_ce0");
    sc_trace(mVcdFile, coefs_d0, "(port)coefs_d0");
    sc_trace(mVcdFile, coefs_q0, "(port)coefs_q0");
    sc_trace(mVcdFile, coefs_we0, "(port)coefs_we0");
    sc_trace(mVcdFile, in_r_dout, "(port)in_r_dout");
    sc_trace(mVcdFile, in_r_empty_n, "(port)in_r_empty_n");
    sc_trace(mVcdFile, in_r_read, "(port)in_r_read");
    sc_trace(mVcdFile, inxn2_address0, "(port)inxn2_address0");
    sc_trace(mVcdFile, inxn2_ce0, "(port)inxn2_ce0");
    sc_trace(mVcdFile, inxn2_d0, "(port)inxn2_d0");
    sc_trace(mVcdFile, inxn2_q0, "(port)inxn2_q0");
    sc_trace(mVcdFile, inxn2_we0, "(port)inxn2_we0");
    sc_trace(mVcdFile, outxk1_address0, "(port)outxk1_address0");
    sc_trace(mVcdFile, outxk1_ce0, "(port)outxk1_ce0");
    sc_trace(mVcdFile, outxk1_d0, "(port)outxk1_d0");
    sc_trace(mVcdFile, outxk1_q0, "(port)outxk1_q0");
    sc_trace(mVcdFile, outxk1_we0, "(port)outxk1_we0");
    sc_trace(mVcdFile, out_r_din, "(port)out_r_din");
    sc_trace(mVcdFile, out_r_full_n, "(port)out_r_full_n");
    sc_trace(mVcdFile, out_r_write, "(port)out_r_write");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, dummy_proc_fe_U0_ap_start, "dummy_proc_fe_U0_ap_start");
    sc_trace(mVcdFile, dummy_proc_fe_U0_ap_done, "dummy_proc_fe_U0_ap_done");
    sc_trace(mVcdFile, dummy_proc_fe_U0_ap_continue, "dummy_proc_fe_U0_ap_continue");
    sc_trace(mVcdFile, dummy_proc_fe_U0_ap_idle, "dummy_proc_fe_U0_ap_idle");
    sc_trace(mVcdFile, dummy_proc_fe_U0_ap_ready, "dummy_proc_fe_U0_ap_ready");
    sc_trace(mVcdFile, dummy_proc_fe_U0_config_fwd_data_V_din, "dummy_proc_fe_U0_config_fwd_data_V_din");
    sc_trace(mVcdFile, dummy_proc_fe_U0_config_fwd_data_V_write, "dummy_proc_fe_U0_config_fwd_data_V_write");
    sc_trace(mVcdFile, dummy_proc_fe_U0_config_inv_data_V_din, "dummy_proc_fe_U0_config_inv_data_V_din");
    sc_trace(mVcdFile, dummy_proc_fe_U0_config_inv_data_V_write, "dummy_proc_fe_U0_config_inv_data_V_write");
    sc_trace(mVcdFile, dummy_proc_fe_U0_in_r_read, "dummy_proc_fe_U0_in_r_read");
    sc_trace(mVcdFile, dummy_proc_fe_U0_input_xn2_address0, "dummy_proc_fe_U0_input_xn2_address0");
    sc_trace(mVcdFile, dummy_proc_fe_U0_input_xn2_ce0, "dummy_proc_fe_U0_input_xn2_ce0");
    sc_trace(mVcdFile, dummy_proc_fe_U0_output_xn1_din, "dummy_proc_fe_U0_output_xn1_din");
    sc_trace(mVcdFile, dummy_proc_fe_U0_output_xn1_write, "dummy_proc_fe_U0_output_xn1_write");
    sc_trace(mVcdFile, dummy_proc_fe_U0_output_xn2_din, "dummy_proc_fe_U0_output_xn2_din");
    sc_trace(mVcdFile, dummy_proc_fe_U0_output_xn2_write, "dummy_proc_fe_U0_output_xn2_write");
    sc_trace(mVcdFile, fft_config1_U0_ap_start, "fft_config1_U0_ap_start");
    sc_trace(mVcdFile, fft_config1_U0_ap_done, "fft_config1_U0_ap_done");
    sc_trace(mVcdFile, fft_config1_U0_ap_idle, "fft_config1_U0_ap_idle");
    sc_trace(mVcdFile, fft_config1_U0_ap_ready, "fft_config1_U0_ap_ready");
    sc_trace(mVcdFile, fft_config1_U0_xn_read, "fft_config1_U0_xn_read");
    sc_trace(mVcdFile, fft_config1_U0_xk_din, "fft_config1_U0_xk_din");
    sc_trace(mVcdFile, fft_config1_U0_xk_write, "fft_config1_U0_xk_write");
    sc_trace(mVcdFile, fft_config1_U0_status_data_V_din, "fft_config1_U0_status_data_V_din");
    sc_trace(mVcdFile, fft_config1_U0_status_data_V_write, "fft_config1_U0_status_data_V_write");
    sc_trace(mVcdFile, fft_config1_U0_config_ch_data_V_read, "fft_config1_U0_config_ch_data_V_read");
    sc_trace(mVcdFile, fft_config2_U0_ap_start, "fft_config2_U0_ap_start");
    sc_trace(mVcdFile, fft_config2_U0_ap_done, "fft_config2_U0_ap_done");
    sc_trace(mVcdFile, fft_config2_U0_ap_idle, "fft_config2_U0_ap_idle");
    sc_trace(mVcdFile, fft_config2_U0_ap_ready, "fft_config2_U0_ap_ready");
    sc_trace(mVcdFile, fft_config2_U0_xn_read, "fft_config2_U0_xn_read");
    sc_trace(mVcdFile, fft_config2_U0_xk_din, "fft_config2_U0_xk_din");
    sc_trace(mVcdFile, fft_config2_U0_xk_write, "fft_config2_U0_xk_write");
    sc_trace(mVcdFile, fft_config2_U0_status_data_V_din, "fft_config2_U0_status_data_V_din");
    sc_trace(mVcdFile, fft_config2_U0_status_data_V_write, "fft_config2_U0_status_data_V_write");
    sc_trace(mVcdFile, fft_config2_U0_config_ch_data_V_read, "fft_config2_U0_config_ch_data_V_read");
    sc_trace(mVcdFile, dummy_proc_be_U0_ap_start, "dummy_proc_be_U0_ap_start");
    sc_trace(mVcdFile, dummy_proc_be_U0_ap_done, "dummy_proc_be_U0_ap_done");
    sc_trace(mVcdFile, dummy_proc_be_U0_ap_continue, "dummy_proc_be_U0_ap_continue");
    sc_trace(mVcdFile, dummy_proc_be_U0_ap_idle, "dummy_proc_be_U0_ap_idle");
    sc_trace(mVcdFile, dummy_proc_be_U0_ap_ready, "dummy_proc_be_U0_ap_ready");
    sc_trace(mVcdFile, dummy_proc_be_U0_coefs_address0, "dummy_proc_be_U0_coefs_address0");
    sc_trace(mVcdFile, dummy_proc_be_U0_coefs_ce0, "dummy_proc_be_U0_coefs_ce0");
    sc_trace(mVcdFile, dummy_proc_be_U0_input_xk1_read, "dummy_proc_be_U0_input_xk1_read");
    sc_trace(mVcdFile, dummy_proc_be_U0_input_xk2_read, "dummy_proc_be_U0_input_xk2_read");
    sc_trace(mVcdFile, dummy_proc_be_U0_output_xk1_address0, "dummy_proc_be_U0_output_xk1_address0");
    sc_trace(mVcdFile, dummy_proc_be_U0_output_xk1_ce0, "dummy_proc_be_U0_output_xk1_ce0");
    sc_trace(mVcdFile, dummy_proc_be_U0_output_xk1_we0, "dummy_proc_be_U0_output_xk1_we0");
    sc_trace(mVcdFile, dummy_proc_be_U0_output_xk1_d0, "dummy_proc_be_U0_output_xk1_d0");
    sc_trace(mVcdFile, dummy_proc_be_U0_out_r_din, "dummy_proc_be_U0_out_r_din");
    sc_trace(mVcdFile, dummy_proc_be_U0_out_r_write, "dummy_proc_be_U0_out_r_write");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, fft_config_fwd_data_s_full_n, "fft_config_fwd_data_s_full_n");
    sc_trace(mVcdFile, fft_config_fwd_data_s_dout, "fft_config_fwd_data_s_dout");
    sc_trace(mVcdFile, fft_config_fwd_data_s_empty_n, "fft_config_fwd_data_s_empty_n");
    sc_trace(mVcdFile, fft_config_inv_data_s_full_n, "fft_config_inv_data_s_full_n");
    sc_trace(mVcdFile, fft_config_inv_data_s_dout, "fft_config_inv_data_s_dout");
    sc_trace(mVcdFile, fft_config_inv_data_s_empty_n, "fft_config_inv_data_s_empty_n");
    sc_trace(mVcdFile, xn_channel_full_n, "xn_channel_full_n");
    sc_trace(mVcdFile, xn_channel_dout, "xn_channel_dout");
    sc_trace(mVcdFile, xn_channel_empty_n, "xn_channel_empty_n");
    sc_trace(mVcdFile, xn2_channel_full_n, "xn2_channel_full_n");
    sc_trace(mVcdFile, xn2_channel_dout, "xn2_channel_dout");
    sc_trace(mVcdFile, xn2_channel_empty_n, "xn2_channel_empty_n");
    sc_trace(mVcdFile, xk_channel_full_n, "xk_channel_full_n");
    sc_trace(mVcdFile, xk_channel_dout, "xk_channel_dout");
    sc_trace(mVcdFile, xk_channel_empty_n, "xk_channel_empty_n");
    sc_trace(mVcdFile, xk2_channel_full_n, "xk2_channel_full_n");
    sc_trace(mVcdFile, xk2_channel_dout, "xk2_channel_dout");
    sc_trace(mVcdFile, xk2_channel_empty_n, "xk2_channel_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_dummy_proc_be_U0_ap_ready, "ap_sync_reg_dummy_proc_be_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_dummy_proc_be_U0_ap_ready, "ap_sync_dummy_proc_be_U0_ap_ready");
    sc_trace(mVcdFile, dummy_proc_be_U0_ap_ready_count, "dummy_proc_be_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_dummy_proc_fe_U0_ap_ready, "ap_sync_reg_dummy_proc_fe_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_dummy_proc_fe_U0_ap_ready, "ap_sync_dummy_proc_fe_U0_ap_ready");
    sc_trace(mVcdFile, dummy_proc_fe_U0_ap_ready_count, "dummy_proc_fe_U0_ap_ready_count");
#endif

    }
    mHdltvinHandle.open("filter_top.hdltvin.dat");
    mHdltvoutHandle.open("filter_top.hdltvout.dat");
}

filter_top::~filter_top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete dummy_proc_fe_U0;
    delete fft_config1_U0;
    delete fft_config2_U0;
    delete dummy_proc_be_U0;
    delete fft_config_fwd_data_s_U;
    delete fft_config_inv_data_s_U;
    delete xn_channel_U;
    delete xn2_channel_U;
    delete xk_channel_U;
    delete xk2_channel_U;
}

void filter_top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void filter_top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_dummy_proc_be_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_dummy_proc_be_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_dummy_proc_be_U0_ap_ready = ap_sync_dummy_proc_be_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_dummy_proc_fe_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_dummy_proc_fe_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_dummy_proc_fe_U0_ap_ready = ap_sync_dummy_proc_fe_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, dummy_proc_be_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        dummy_proc_be_U0_ap_ready_count = (!dummy_proc_be_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(dummy_proc_be_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, dummy_proc_be_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        dummy_proc_be_U0_ap_ready_count = (!dummy_proc_be_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(dummy_proc_be_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, dummy_proc_fe_U0_ap_ready.read()))) {
        dummy_proc_fe_U0_ap_ready_count = (!dummy_proc_fe_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(dummy_proc_fe_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(dummy_proc_fe_U0_ap_ready.read(), ap_const_logic_1))) {
        dummy_proc_fe_U0_ap_ready_count = (!dummy_proc_fe_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(dummy_proc_fe_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        fft_config1_U0_ap_start = ap_const_logic_0;
    } else {
        fft_config1_U0_ap_start = ap_const_logic_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        fft_config2_U0_ap_start = ap_const_logic_0;
    } else {
        fft_config2_U0_ap_start = ap_const_logic_1;
    }
}

void filter_top::thread_ap_done() {
    ap_done = dummy_proc_be_U0_ap_done.read();
}

void filter_top::thread_ap_idle() {
    ap_idle = (dummy_proc_fe_U0_ap_idle.read() & fft_config1_U0_ap_idle.read() & fft_config2_U0_ap_idle.read() & dummy_proc_be_U0_ap_idle.read());
}

void filter_top::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void filter_top::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void filter_top::thread_ap_sync_done() {
    ap_sync_done = dummy_proc_be_U0_ap_done.read();
}

void filter_top::thread_ap_sync_dummy_proc_be_U0_ap_ready() {
    ap_sync_dummy_proc_be_U0_ap_ready = (dummy_proc_be_U0_ap_ready.read() | ap_sync_reg_dummy_proc_be_U0_ap_ready.read());
}

void filter_top::thread_ap_sync_dummy_proc_fe_U0_ap_ready() {
    ap_sync_dummy_proc_fe_U0_ap_ready = (dummy_proc_fe_U0_ap_ready.read() | ap_sync_reg_dummy_proc_fe_U0_ap_ready.read());
}

void filter_top::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_dummy_proc_be_U0_ap_ready.read() & ap_sync_dummy_proc_fe_U0_ap_ready.read());
}

void filter_top::thread_coefs_address0() {
    coefs_address0 = dummy_proc_be_U0_coefs_address0.read();
}

void filter_top::thread_coefs_ce0() {
    coefs_ce0 = dummy_proc_be_U0_coefs_ce0.read();
}

void filter_top::thread_coefs_d0() {
    coefs_d0 = ap_const_lv64_0;
}

void filter_top::thread_coefs_we0() {
    coefs_we0 = ap_const_logic_0;
}

void filter_top::thread_dummy_proc_be_U0_ap_continue() {
    dummy_proc_be_U0_ap_continue = ap_const_logic_1;
}

void filter_top::thread_dummy_proc_be_U0_ap_start() {
    dummy_proc_be_U0_ap_start = (ap_start.read() & (ap_sync_reg_dummy_proc_be_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void filter_top::thread_dummy_proc_fe_U0_ap_continue() {
    dummy_proc_fe_U0_ap_continue = ap_const_logic_1;
}

void filter_top::thread_dummy_proc_fe_U0_ap_start() {
    dummy_proc_fe_U0_ap_start = (ap_start.read() & (ap_sync_reg_dummy_proc_fe_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void filter_top::thread_in_r_read() {
    in_r_read = dummy_proc_fe_U0_in_r_read.read();
}

void filter_top::thread_inxn2_address0() {
    inxn2_address0 = dummy_proc_fe_U0_input_xn2_address0.read();
}

void filter_top::thread_inxn2_ce0() {
    inxn2_ce0 = dummy_proc_fe_U0_input_xn2_ce0.read();
}

void filter_top::thread_inxn2_d0() {
    inxn2_d0 = ap_const_lv64_0;
}

void filter_top::thread_inxn2_we0() {
    inxn2_we0 = ap_const_logic_0;
}

void filter_top::thread_out_r_din() {
    out_r_din = dummy_proc_be_U0_out_r_din.read();
}

void filter_top::thread_out_r_write() {
    out_r_write = dummy_proc_be_U0_out_r_write.read();
}

void filter_top::thread_outxk1_address0() {
    outxk1_address0 = dummy_proc_be_U0_output_xk1_address0.read();
}

void filter_top::thread_outxk1_ce0() {
    outxk1_ce0 = dummy_proc_be_U0_output_xk1_ce0.read();
}

void filter_top::thread_outxk1_d0() {
    outxk1_d0 = dummy_proc_be_U0_output_xk1_d0.read();
}

void filter_top::thread_outxk1_we0() {
    outxk1_we0 = dummy_proc_be_U0_output_xk1_we0.read();
}

void filter_top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvoutHandle << mComma << "{"  <<  " \"coefs_address0\" :  \"" << coefs_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"coefs_ce0\" :  \"" << coefs_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"coefs_d0\" :  \"" << coefs_d0.read() << "\" ";
        mHdltvinHandle << mComma << "{"  <<  " \"coefs_q0\" :  \"" << coefs_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"coefs_we0\" :  \"" << coefs_we0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_dout\" :  \"" << in_r_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_empty_n\" :  \"" << in_r_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_read\" :  \"" << in_r_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inxn2_address0\" :  \"" << inxn2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inxn2_ce0\" :  \"" << inxn2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inxn2_d0\" :  \"" << inxn2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inxn2_q0\" :  \"" << inxn2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inxn2_we0\" :  \"" << inxn2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outxk1_address0\" :  \"" << outxk1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outxk1_ce0\" :  \"" << outxk1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outxk1_d0\" :  \"" << outxk1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outxk1_q0\" :  \"" << outxk1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outxk1_we0\" :  \"" << outxk1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_din\" :  \"" << out_r_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_full_n\" :  \"" << out_r_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_write\" :  \"" << out_r_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

