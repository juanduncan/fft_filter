// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dummy_proc_fe.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dummy_proc_fe::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dummy_proc_fe::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> dummy_proc_fe::ap_ST_fsm_state1 = "1";
const sc_lv<7> dummy_proc_fe::ap_ST_fsm_state2 = "10";
const sc_lv<7> dummy_proc_fe::ap_ST_fsm_state3 = "100";
const sc_lv<7> dummy_proc_fe::ap_ST_fsm_state4 = "1000";
const sc_lv<7> dummy_proc_fe::ap_ST_fsm_state5 = "10000";
const sc_lv<7> dummy_proc_fe::ap_ST_fsm_state6 = "100000";
const sc_lv<7> dummy_proc_fe::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_3 = "11";
const sc_lv<1> dummy_proc_fe::ap_const_lv1_0 = "0";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_6 = "110";
const sc_lv<1> dummy_proc_fe::ap_const_lv1_1 = "1";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_1 = "1";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_2 = "10";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_5 = "101";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_0 = "000000000000";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_4 = "100";
const sc_lv<16> dummy_proc_fe::ap_const_lv16_C3F = "110000111111";
const sc_lv<16> dummy_proc_fe::ap_const_lv16_2 = "10";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_800 = "100000000000";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_1 = "1";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_9 = "1001";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_B = "1011";
const sc_lv<3> dummy_proc_fe::ap_const_lv3_0 = "000";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_20 = "100000";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_3F = "111111";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_5FF = "10111111111";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_A00 = "101000000000";
const bool dummy_proc_fe::ap_const_boolean_1 = true;

dummy_proc_fe::dummy_proc_fe(sc_module_name name) : sc_module(name), mVcdFile(0) {
    detector_tail_M_rea_U = new dummy_proc_fe_detbkb("detector_tail_M_rea_U");
    detector_tail_M_rea_U->clk(ap_clk);
    detector_tail_M_rea_U->reset(ap_rst);
    detector_tail_M_rea_U->address0(detector_tail_M_rea_address0);
    detector_tail_M_rea_U->ce0(detector_tail_M_rea_ce0);
    detector_tail_M_rea_U->we0(detector_tail_M_rea_we0);
    detector_tail_M_rea_U->d0(tmp_2_reg_328);
    detector_tail_M_rea_U->q0(detector_tail_M_rea_q0);
    detector_tail_M_ima_U = new dummy_proc_fe_detbkb("detector_tail_M_ima_U");
    detector_tail_M_ima_U->clk(ap_clk);
    detector_tail_M_ima_U->reset(ap_rst);
    detector_tail_M_ima_U->address0(detector_tail_M_ima_address0);
    detector_tail_M_ima_U->ce0(detector_tail_M_ima_ce0);
    detector_tail_M_ima_U->we0(detector_tail_M_ima_we0);
    detector_tail_M_ima_U->d0(in_M_imag_V_load_ne_reg_333);
    detector_tail_M_ima_U->q0(detector_tail_M_ima_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( config_fwd_data_V_full_n );
    sensitive << ( config_inv_data_V_full_n );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( icmp_fu_256_p2 );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( output_xn1_full_n );
    sensitive << ( icmp_reg_324 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_229_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_229_p2 );

    SC_METHOD(thread_config_fwd_data_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_fwd_data_V_full_n );

    SC_METHOD(thread_config_fwd_data_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_fwd_data_V_full_n );
    sensitive << ( config_inv_data_V_full_n );

    SC_METHOD(thread_config_fwd_data_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_fwd_data_V_full_n );
    sensitive << ( config_inv_data_V_full_n );

    SC_METHOD(thread_config_inv_data_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_inv_data_V_full_n );

    SC_METHOD(thread_config_inv_data_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_fwd_data_V_full_n );
    sensitive << ( config_inv_data_V_full_n );

    SC_METHOD(thread_config_inv_data_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_fwd_data_V_full_n );
    sensitive << ( config_inv_data_V_full_n );

    SC_METHOD(thread_detector_tail_M_ima_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_reg_308 );
    sensitive << ( tmp_4_fu_288_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_detector_tail_M_ima_ce0);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_detector_tail_M_ima_we0);
    sensitive << ( tmp_8_reg_338 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_detector_tail_M_rea_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_reg_308 );
    sensitive << ( tmp_4_fu_288_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_detector_tail_M_rea_ce0);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_detector_tail_M_rea_we0);
    sensitive << ( tmp_8_reg_338 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_exitcond_fu_229_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_217 );

    SC_METHOD(thread_i_1_fu_235_p2);
    sensitive << ( i_reg_217 );

    SC_METHOD(thread_icmp_fu_256_p2);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( tmp_1_fu_246_p4 );

    SC_METHOD(thread_in_r_blk_n);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );

    SC_METHOD(thread_in_r_read);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );

    SC_METHOD(thread_input_xn2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_241_p1 );

    SC_METHOD(thread_input_xn2_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_output_xn1_M_imag_V_fu_293_p3);
    sensitive << ( detector_tail_M_rea_1_reg_357 );
    sensitive << ( detector_tail_M_ima_1_reg_362 );

    SC_METHOD(thread_output_xn1_blk_n);
    sensitive << ( output_xn1_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_reg_324 );

    SC_METHOD(thread_output_xn1_din);
    sensitive << ( in_r_dout );
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_reg_324 );
    sensitive << ( output_xn1_M_imag_V_fu_293_p3 );

    SC_METHOD(thread_output_xn1_write);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_reg_324 );

    SC_METHOD(thread_output_xn2_blk_n);
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_output_xn2_din);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( input_xn2_load_reg_319 );

    SC_METHOD(thread_output_xn2_write);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );

    SC_METHOD(thread_tmp_1_fu_246_p4);
    sensitive << ( i_reg_217 );

    SC_METHOD(thread_tmp_2_fu_262_p1);
    sensitive << ( in_r_dout );

    SC_METHOD(thread_tmp_4_fu_288_p1);
    sensitive << ( tmp_9_reg_342 );

    SC_METHOD(thread_tmp_8_fu_276_p2);
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( i_reg_217 );

    SC_METHOD(thread_tmp_9_fu_282_p2);
    sensitive << ( i_reg_217 );

    SC_METHOD(thread_tmp_fu_241_p1);
    sensitive << ( i_reg_217 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_fwd_data_V_full_n );
    sensitive << ( config_inv_data_V_full_n );
    sensitive << ( in_r_empty_n );
    sensitive << ( output_xn1_full_n );
    sensitive << ( output_xn2_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_reg_324 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_229_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dummy_proc_fe_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, config_fwd_data_V_din, "(port)config_fwd_data_V_din");
    sc_trace(mVcdFile, config_fwd_data_V_full_n, "(port)config_fwd_data_V_full_n");
    sc_trace(mVcdFile, config_fwd_data_V_write, "(port)config_fwd_data_V_write");
    sc_trace(mVcdFile, config_inv_data_V_din, "(port)config_inv_data_V_din");
    sc_trace(mVcdFile, config_inv_data_V_full_n, "(port)config_inv_data_V_full_n");
    sc_trace(mVcdFile, config_inv_data_V_write, "(port)config_inv_data_V_write");
    sc_trace(mVcdFile, in_r_dout, "(port)in_r_dout");
    sc_trace(mVcdFile, in_r_empty_n, "(port)in_r_empty_n");
    sc_trace(mVcdFile, in_r_read, "(port)in_r_read");
    sc_trace(mVcdFile, input_xn2_address0, "(port)input_xn2_address0");
    sc_trace(mVcdFile, input_xn2_ce0, "(port)input_xn2_ce0");
    sc_trace(mVcdFile, input_xn2_q0, "(port)input_xn2_q0");
    sc_trace(mVcdFile, output_xn1_din, "(port)output_xn1_din");
    sc_trace(mVcdFile, output_xn1_full_n, "(port)output_xn1_full_n");
    sc_trace(mVcdFile, output_xn1_write, "(port)output_xn1_write");
    sc_trace(mVcdFile, output_xn2_din, "(port)output_xn2_din");
    sc_trace(mVcdFile, output_xn2_full_n, "(port)output_xn2_full_n");
    sc_trace(mVcdFile, output_xn2_write, "(port)output_xn2_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, detector_tail_M_rea_address0, "detector_tail_M_rea_address0");
    sc_trace(mVcdFile, detector_tail_M_rea_ce0, "detector_tail_M_rea_ce0");
    sc_trace(mVcdFile, detector_tail_M_rea_we0, "detector_tail_M_rea_we0");
    sc_trace(mVcdFile, detector_tail_M_rea_q0, "detector_tail_M_rea_q0");
    sc_trace(mVcdFile, detector_tail_M_ima_address0, "detector_tail_M_ima_address0");
    sc_trace(mVcdFile, detector_tail_M_ima_ce0, "detector_tail_M_ima_ce0");
    sc_trace(mVcdFile, detector_tail_M_ima_we0, "detector_tail_M_ima_we0");
    sc_trace(mVcdFile, detector_tail_M_ima_q0, "detector_tail_M_ima_q0");
    sc_trace(mVcdFile, config_fwd_data_V_blk_n, "config_fwd_data_V_blk_n");
    sc_trace(mVcdFile, config_inv_data_V_blk_n, "config_inv_data_V_blk_n");
    sc_trace(mVcdFile, in_r_blk_n, "in_r_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_fu_256_p2, "icmp_fu_256_p2");
    sc_trace(mVcdFile, output_xn1_blk_n, "output_xn1_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_reg_324, "icmp_reg_324");
    sc_trace(mVcdFile, output_xn2_blk_n, "output_xn2_blk_n");
    sc_trace(mVcdFile, i_1_fu_235_p2, "i_1_fu_235_p2");
    sc_trace(mVcdFile, i_1_reg_303, "i_1_reg_303");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_241_p1, "tmp_fu_241_p1");
    sc_trace(mVcdFile, tmp_reg_308, "tmp_reg_308");
    sc_trace(mVcdFile, exitcond_fu_229_p2, "exitcond_fu_229_p2");
    sc_trace(mVcdFile, input_xn2_load_reg_319, "input_xn2_load_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, tmp_2_fu_262_p1, "tmp_2_fu_262_p1");
    sc_trace(mVcdFile, tmp_2_reg_328, "tmp_2_reg_328");
    sc_trace(mVcdFile, in_M_imag_V_load_ne_reg_333, "in_M_imag_V_load_ne_reg_333");
    sc_trace(mVcdFile, tmp_8_fu_276_p2, "tmp_8_fu_276_p2");
    sc_trace(mVcdFile, tmp_8_reg_338, "tmp_8_reg_338");
    sc_trace(mVcdFile, tmp_9_fu_282_p2, "tmp_9_fu_282_p2");
    sc_trace(mVcdFile, tmp_9_reg_342, "tmp_9_reg_342");
    sc_trace(mVcdFile, detector_tail_M_rea_1_reg_357, "detector_tail_M_rea_1_reg_357");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, detector_tail_M_ima_1_reg_362, "detector_tail_M_ima_1_reg_362");
    sc_trace(mVcdFile, i_reg_217, "i_reg_217");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, tmp_4_fu_288_p1, "tmp_4_fu_288_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, output_xn1_M_imag_V_fu_293_p3, "output_xn1_M_imag_V_fu_293_p3");
    sc_trace(mVcdFile, tmp_1_fu_246_p4, "tmp_1_fu_246_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dummy_proc_fe::~dummy_proc_fe() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete detector_tail_M_rea_U;
    delete detector_tail_M_ima_U;
}

void dummy_proc_fe::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_229_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         !(esl_seteq<1,1,1>(icmp_reg_324.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read())))) {
        i_reg_217 = i_1_reg_303.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_fwd_data_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_inv_data_V_full_n.read())))) {
        i_reg_217 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        detector_tail_M_ima_1_reg_362 = detector_tail_M_ima_q0.read();
        detector_tail_M_rea_1_reg_357 = detector_tail_M_rea_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_303 = i_1_fu_235_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))))) {
        icmp_reg_324 = icmp_fu_256_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))))) {
        in_M_imag_V_load_ne_reg_333 = in_r_dout.read().range(63, 32);
        tmp_2_reg_328 = tmp_2_fu_262_p1.read();
        tmp_8_reg_338 = tmp_8_fu_276_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_xn2_load_reg_319 = input_xn2_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_276_p2.read()))) {
        tmp_9_reg_342 = tmp_9_fu_282_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_229_p2.read()))) {
        tmp_reg_308 = tmp_fu_241_p1.read();
    }
}

void dummy_proc_fe::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dummy_proc_fe::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dummy_proc_fe::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dummy_proc_fe::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dummy_proc_fe::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dummy_proc_fe::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dummy_proc_fe::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dummy_proc_fe::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_fwd_data_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_inv_data_V_full_n.read()));
}

void dummy_proc_fe::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read())));
}

void dummy_proc_fe::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(icmp_reg_324.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()));
}

void dummy_proc_fe::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_229_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void dummy_proc_fe::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_229_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_config_fwd_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        config_fwd_data_V_blk_n = config_fwd_data_V_full_n.read();
    } else {
        config_fwd_data_V_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_config_fwd_data_V_din() {
    config_fwd_data_V_din = ap_const_lv16_C3F;
}

void dummy_proc_fe::thread_config_fwd_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_fwd_data_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_inv_data_V_full_n.read())))) {
        config_fwd_data_V_write = ap_const_logic_1;
    } else {
        config_fwd_data_V_write = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_config_inv_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        config_inv_data_V_blk_n = config_inv_data_V_full_n.read();
    } else {
        config_inv_data_V_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_config_inv_data_V_din() {
    config_inv_data_V_din = ap_const_lv16_2;
}

void dummy_proc_fe::thread_config_inv_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_fwd_data_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_inv_data_V_full_n.read())))) {
        config_inv_data_V_write = ap_const_logic_1;
    } else {
        config_inv_data_V_write = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_detector_tail_M_ima_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        detector_tail_M_ima_address0 =  (sc_lv<9>) (tmp_4_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        detector_tail_M_ima_address0 =  (sc_lv<9>) (tmp_reg_308.read());
    } else {
        detector_tail_M_ima_address0 = "XXXXXXXXX";
    }
}

void dummy_proc_fe::thread_detector_tail_M_ima_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        detector_tail_M_ima_ce0 = ap_const_logic_1;
    } else {
        detector_tail_M_ima_ce0 = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_detector_tail_M_ima_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_338.read()))) {
        detector_tail_M_ima_we0 = ap_const_logic_1;
    } else {
        detector_tail_M_ima_we0 = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_detector_tail_M_rea_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        detector_tail_M_rea_address0 =  (sc_lv<9>) (tmp_4_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        detector_tail_M_rea_address0 =  (sc_lv<9>) (tmp_reg_308.read());
    } else {
        detector_tail_M_rea_address0 = "XXXXXXXXX";
    }
}

void dummy_proc_fe::thread_detector_tail_M_rea_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        detector_tail_M_rea_ce0 = ap_const_logic_1;
    } else {
        detector_tail_M_rea_ce0 = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_detector_tail_M_rea_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_338.read()))) {
        detector_tail_M_rea_we0 = ap_const_logic_1;
    } else {
        detector_tail_M_rea_we0 = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_exitcond_fu_229_p2() {
    exitcond_fu_229_p2 = (!i_reg_217.read().is_01() || !ap_const_lv12_800.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_217.read() == ap_const_lv12_800);
}

void dummy_proc_fe::thread_i_1_fu_235_p2() {
    i_1_fu_235_p2 = (!i_reg_217.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(i_reg_217.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void dummy_proc_fe::thread_icmp_fu_256_p2() {
    icmp_fu_256_p2 = (!tmp_1_fu_246_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_246_p4.read() == ap_const_lv3_0);
}

void dummy_proc_fe::thread_in_r_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0))) {
        in_r_blk_n = in_r_empty_n.read();
    } else {
        in_r_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_in_r_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))))) {
        in_r_read = ap_const_logic_1;
    } else {
        in_r_read = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_input_xn2_address0() {
    input_xn2_address0 =  (sc_lv<11>) (tmp_fu_241_p1.read());
}

void dummy_proc_fe::thread_input_xn2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_xn2_ce0 = ap_const_logic_1;
    } else {
        input_xn2_ce0 = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_output_xn1_M_imag_V_fu_293_p3() {
    output_xn1_M_imag_V_fu_293_p3 = esl_concat<32,32>(detector_tail_M_ima_1_reg_362.read(), detector_tail_M_rea_1_reg_357.read());
}

void dummy_proc_fe::thread_output_xn1_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(icmp_reg_324.read(), ap_const_lv1_1)))) {
        output_xn1_blk_n = output_xn1_full_n.read();
    } else {
        output_xn1_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_output_xn1_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_reg_324.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_reg_324.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read())))) {
        output_xn1_din = output_xn1_M_imag_V_fu_293_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))))) {
        output_xn1_din = in_r_dout.read();
    } else {
        output_xn1_din =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dummy_proc_fe::thread_output_xn1_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(icmp_reg_324.read(), ap_const_lv1_1) && 
          !(esl_seteq<1,1,1>(icmp_reg_324.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))))) {
        output_xn1_write = ap_const_logic_1;
    } else {
        output_xn1_write = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_output_xn2_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_xn2_blk_n = output_xn2_full_n.read();
    } else {
        output_xn2_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_output_xn2_din() {
    output_xn2_din = input_xn2_load_reg_319.read();
}

void dummy_proc_fe::thread_output_xn2_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))))) {
        output_xn2_write = ap_const_logic_1;
    } else {
        output_xn2_write = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_tmp_1_fu_246_p4() {
    tmp_1_fu_246_p4 = i_reg_217.read().range(11, 9);
}

void dummy_proc_fe::thread_tmp_2_fu_262_p1() {
    tmp_2_fu_262_p1 = in_r_dout.read().range(32-1, 0);
}

void dummy_proc_fe::thread_tmp_4_fu_288_p1() {
    tmp_4_fu_288_p1 = esl_zext<64,12>(tmp_9_reg_342.read());
}

void dummy_proc_fe::thread_tmp_8_fu_276_p2() {
    tmp_8_fu_276_p2 = (!i_reg_217.read().is_01() || !ap_const_lv12_5FF.is_01())? sc_lv<1>(): (sc_biguint<12>(i_reg_217.read()) > sc_biguint<12>(ap_const_lv12_5FF));
}

void dummy_proc_fe::thread_tmp_9_fu_282_p2() {
    tmp_9_fu_282_p2 = (!i_reg_217.read().is_01() || !ap_const_lv12_A00.is_01())? sc_lv<12>(): (sc_biguint<12>(i_reg_217.read()) + sc_bigint<12>(ap_const_lv12_A00));
}

void dummy_proc_fe::thread_tmp_fu_241_p1() {
    tmp_fu_241_p1 = esl_zext<64,12>(i_reg_217.read());
}

void dummy_proc_fe::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_fwd_data_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_inv_data_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_229_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_xn2_full_n.read()) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read()))) && esl_seteq<1,1,1>(icmp_fu_256_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(icmp_reg_324.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, output_xn1_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

