// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dummy_proc_be.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dummy_proc_be::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dummy_proc_be::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state1 = "1";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state2 = "10";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state3 = "100";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state4 = "1000";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state5 = "10000";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state6 = "100000";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> dummy_proc_be::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> dummy_proc_be::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dummy_proc_be::ap_const_lv32_2 = "10";
const sc_lv<32> dummy_proc_be::ap_const_lv32_9 = "1001";
const sc_lv<1> dummy_proc_be::ap_const_lv1_0 = "0";
const sc_lv<32> dummy_proc_be::ap_const_lv32_1 = "1";
const sc_lv<32> dummy_proc_be::ap_const_lv32_3 = "11";
const sc_lv<32> dummy_proc_be::ap_const_lv32_7 = "111";
const sc_lv<32> dummy_proc_be::ap_const_lv32_8 = "1000";
const sc_lv<12> dummy_proc_be::ap_const_lv12_0 = "000000000000";
const sc_lv<12> dummy_proc_be::ap_const_lv12_800 = "100000000000";
const sc_lv<12> dummy_proc_be::ap_const_lv12_1 = "1";
const sc_lv<32> dummy_proc_be::ap_const_lv32_B = "1011";
const sc_lv<3> dummy_proc_be::ap_const_lv3_0 = "000";
const sc_lv<32> dummy_proc_be::ap_const_lv32_20 = "100000";
const sc_lv<32> dummy_proc_be::ap_const_lv32_3F = "111111";
const sc_lv<32> dummy_proc_be::ap_const_lv32_1F = "11111";
const sc_lv<32> dummy_proc_be::ap_const_lv32_3E = "111110";
const sc_lv<1> dummy_proc_be::ap_const_lv1_1 = "1";
const bool dummy_proc_be::ap_const_boolean_1 = true;

dummy_proc_be::dummy_proc_be(sc_module_name name) : sc_module(name), mVcdFile(0) {
    filter_top_mul_32dEe_U10 = new filter_top_mul_32dEe<1,5,32,32,63>("filter_top_mul_32dEe_U10");
    filter_top_mul_32dEe_U10->clk(ap_clk);
    filter_top_mul_32dEe_U10->reset(ap_rst);
    filter_top_mul_32dEe_U10->din0(grp_fu_223_p0);
    filter_top_mul_32dEe_U10->din1(grp_fu_223_p1);
    filter_top_mul_32dEe_U10->ce(ap_var_for_const0);
    filter_top_mul_32dEe_U10->dout(grp_fu_223_p2);
    filter_top_mul_32dEe_U11 = new filter_top_mul_32dEe<1,5,32,32,63>("filter_top_mul_32dEe_U11");
    filter_top_mul_32dEe_U11->clk(ap_clk);
    filter_top_mul_32dEe_U11->reset(ap_rst);
    filter_top_mul_32dEe_U11->din0(grp_fu_229_p0);
    filter_top_mul_32dEe_U11->din1(grp_fu_229_p1);
    filter_top_mul_32dEe_U11->ce(ap_var_for_const0);
    filter_top_mul_32dEe_U11->dout(grp_fu_229_p2);
    filter_top_mul_32dEe_U12 = new filter_top_mul_32dEe<1,5,32,32,63>("filter_top_mul_32dEe_U12");
    filter_top_mul_32dEe_U12->clk(ap_clk);
    filter_top_mul_32dEe_U12->reset(ap_rst);
    filter_top_mul_32dEe_U12->din0(grp_fu_235_p0);
    filter_top_mul_32dEe_U12->din1(grp_fu_235_p1);
    filter_top_mul_32dEe_U12->ce(ap_var_for_const0);
    filter_top_mul_32dEe_U12->dout(grp_fu_235_p2);
    filter_top_mul_32dEe_U13 = new filter_top_mul_32dEe<1,5,32,32,63>("filter_top_mul_32dEe_U13");
    filter_top_mul_32dEe_U13->clk(ap_clk);
    filter_top_mul_32dEe_U13->reset(ap_rst);
    filter_top_mul_32dEe_U13->din0(grp_fu_241_p0);
    filter_top_mul_32dEe_U13->din1(grp_fu_241_p1);
    filter_top_mul_32dEe_U13->ce(ap_var_for_const0);
    filter_top_mul_32dEe_U13->dout(grp_fu_241_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10);
    sensitive << ( out_r_full_n );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( input_xk1_empty_n );
    sensitive << ( input_xk2_empty_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_150_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_150_p2 );

    SC_METHOD(thread_coefs_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_162_p1 );

    SC_METHOD(thread_coefs_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_exitcond_fu_150_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_139 );

    SC_METHOD(thread_grp_fu_223_p0);
    sensitive << ( tmp_1_fu_211_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_223_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_214_p1 );

    SC_METHOD(thread_grp_fu_229_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_fu_217_p1 );

    SC_METHOD(thread_grp_fu_229_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_4_fu_220_p1 );

    SC_METHOD(thread_grp_fu_235_p0);
    sensitive << ( tmp_1_fu_211_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_235_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_4_fu_220_p1 );

    SC_METHOD(thread_grp_fu_241_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_214_p1 );

    SC_METHOD(thread_grp_fu_241_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_fu_217_p1 );

    SC_METHOD(thread_i_2_fu_156_p2);
    sensitive << ( i_reg_139 );

    SC_METHOD(thread_icmp_fu_177_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_150_p2 );
    sensitive << ( tmp_7_fu_167_p4 );

    SC_METHOD(thread_input_xk1_blk_n);
    sensitive << ( input_xk1_empty_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_xk1_read);
    sensitive << ( input_xk1_empty_n );
    sensitive << ( input_xk2_empty_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_xk2_blk_n);
    sensitive << ( input_xk2_empty_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_xk2_read);
    sensitive << ( input_xk1_empty_n );
    sensitive << ( input_xk2_empty_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_out_r_blk_n);
    sensitive << ( out_r_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_out_r_din);
    sensitive << ( out_r_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_reg_300 );
    sensitive << ( input_xk2_read_reg_324 );

    SC_METHOD(thread_out_r_write);
    sensitive << ( out_r_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_output_xk1_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_reg_290 );

    SC_METHOD(thread_output_xk1_ce0);
    sensitive << ( out_r_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_output_xk1_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( complex_M_real_V_wr_reg_373 );
    sensitive << ( complex_M_imag_V_wr_reg_378 );

    SC_METHOD(thread_output_xk1_we0);
    sensitive << ( out_r_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_p_Val2_1_fu_261_p2);
    sensitive << ( tmp_2_i_i_cast_reg_363 );
    sensitive << ( tmp_3_i_i_cast_reg_368 );

    SC_METHOD(thread_p_Val2_s_fu_247_p2);
    sensitive << ( tmp1_i_i_cast_reg_353 );
    sensitive << ( tmp_1_i_i_cast_reg_358 );

    SC_METHOD(thread_p_r_M_real_V_fu_197_p1);
    sensitive << ( input_xk1_dout );

    SC_METHOD(thread_tmp_1_fu_211_p1);
    sensitive << ( p_r_M_real_V_reg_314 );

    SC_METHOD(thread_tmp_2_fu_214_p1);
    sensitive << ( tmp_5_reg_304 );

    SC_METHOD(thread_tmp_3_fu_217_p1);
    sensitive << ( p_r_M_imag_V_reg_319 );

    SC_METHOD(thread_tmp_4_fu_220_p1);
    sensitive << ( p_y_M_imag_V_read_a_reg_309 );

    SC_METHOD(thread_tmp_5_fu_183_p1);
    sensitive << ( coefs_q0 );

    SC_METHOD(thread_tmp_7_fu_167_p4);
    sensitive << ( i_reg_139 );

    SC_METHOD(thread_tmp_fu_162_p1);
    sensitive << ( i_reg_139 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_xk1_empty_n );
    sensitive << ( input_xk2_empty_n );
    sensitive << ( out_r_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_reg_300 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_150_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dummy_proc_be_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, coefs_address0, "(port)coefs_address0");
    sc_trace(mVcdFile, coefs_ce0, "(port)coefs_ce0");
    sc_trace(mVcdFile, coefs_q0, "(port)coefs_q0");
    sc_trace(mVcdFile, input_xk1_dout, "(port)input_xk1_dout");
    sc_trace(mVcdFile, input_xk1_empty_n, "(port)input_xk1_empty_n");
    sc_trace(mVcdFile, input_xk1_read, "(port)input_xk1_read");
    sc_trace(mVcdFile, input_xk2_dout, "(port)input_xk2_dout");
    sc_trace(mVcdFile, input_xk2_empty_n, "(port)input_xk2_empty_n");
    sc_trace(mVcdFile, input_xk2_read, "(port)input_xk2_read");
    sc_trace(mVcdFile, output_xk1_address0, "(port)output_xk1_address0");
    sc_trace(mVcdFile, output_xk1_ce0, "(port)output_xk1_ce0");
    sc_trace(mVcdFile, output_xk1_we0, "(port)output_xk1_we0");
    sc_trace(mVcdFile, output_xk1_d0, "(port)output_xk1_d0");
    sc_trace(mVcdFile, out_r_din, "(port)out_r_din");
    sc_trace(mVcdFile, out_r_full_n, "(port)out_r_full_n");
    sc_trace(mVcdFile, out_r_write, "(port)out_r_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, input_xk1_blk_n, "input_xk1_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, input_xk2_blk_n, "input_xk2_blk_n");
    sc_trace(mVcdFile, out_r_blk_n, "out_r_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_reg_300, "icmp_reg_300");
    sc_trace(mVcdFile, i_2_fu_156_p2, "i_2_fu_156_p2");
    sc_trace(mVcdFile, i_2_reg_285, "i_2_reg_285");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_162_p1, "tmp_fu_162_p1");
    sc_trace(mVcdFile, tmp_reg_290, "tmp_reg_290");
    sc_trace(mVcdFile, exitcond_fu_150_p2, "exitcond_fu_150_p2");
    sc_trace(mVcdFile, icmp_fu_177_p2, "icmp_fu_177_p2");
    sc_trace(mVcdFile, tmp_5_fu_183_p1, "tmp_5_fu_183_p1");
    sc_trace(mVcdFile, tmp_5_reg_304, "tmp_5_reg_304");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, p_y_M_imag_V_read_a_reg_309, "p_y_M_imag_V_read_a_reg_309");
    sc_trace(mVcdFile, p_r_M_real_V_fu_197_p1, "p_r_M_real_V_fu_197_p1");
    sc_trace(mVcdFile, p_r_M_real_V_reg_314, "p_r_M_real_V_reg_314");
    sc_trace(mVcdFile, p_r_M_imag_V_reg_319, "p_r_M_imag_V_reg_319");
    sc_trace(mVcdFile, input_xk2_read_reg_324, "input_xk2_read_reg_324");
    sc_trace(mVcdFile, tmp_1_fu_211_p1, "tmp_1_fu_211_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_2_fu_214_p1, "tmp_2_fu_214_p1");
    sc_trace(mVcdFile, tmp_3_fu_217_p1, "tmp_3_fu_217_p1");
    sc_trace(mVcdFile, tmp_4_fu_220_p1, "tmp_4_fu_220_p1");
    sc_trace(mVcdFile, grp_fu_223_p2, "grp_fu_223_p2");
    sc_trace(mVcdFile, tmp1_i_i_cast_reg_353, "tmp1_i_i_cast_reg_353");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_229_p2, "grp_fu_229_p2");
    sc_trace(mVcdFile, tmp_1_i_i_cast_reg_358, "tmp_1_i_i_cast_reg_358");
    sc_trace(mVcdFile, grp_fu_235_p2, "grp_fu_235_p2");
    sc_trace(mVcdFile, tmp_2_i_i_cast_reg_363, "tmp_2_i_i_cast_reg_363");
    sc_trace(mVcdFile, grp_fu_241_p2, "grp_fu_241_p2");
    sc_trace(mVcdFile, tmp_3_i_i_cast_reg_368, "tmp_3_i_i_cast_reg_368");
    sc_trace(mVcdFile, complex_M_real_V_wr_reg_373, "complex_M_real_V_wr_reg_373");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, complex_M_imag_V_wr_reg_378, "complex_M_imag_V_wr_reg_378");
    sc_trace(mVcdFile, i_reg_139, "i_reg_139");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_state10, "ap_block_state10");
    sc_trace(mVcdFile, tmp_7_fu_167_p4, "tmp_7_fu_167_p4");
    sc_trace(mVcdFile, grp_fu_223_p0, "grp_fu_223_p0");
    sc_trace(mVcdFile, grp_fu_223_p1, "grp_fu_223_p1");
    sc_trace(mVcdFile, grp_fu_229_p0, "grp_fu_229_p0");
    sc_trace(mVcdFile, grp_fu_229_p1, "grp_fu_229_p1");
    sc_trace(mVcdFile, grp_fu_235_p0, "grp_fu_235_p0");
    sc_trace(mVcdFile, grp_fu_235_p1, "grp_fu_235_p1");
    sc_trace(mVcdFile, grp_fu_241_p0, "grp_fu_241_p0");
    sc_trace(mVcdFile, grp_fu_241_p1, "grp_fu_241_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_247_p2, "p_Val2_s_fu_247_p2");
    sc_trace(mVcdFile, p_Val2_1_fu_261_p2, "p_Val2_1_fu_261_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dummy_proc_be::~dummy_proc_be() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete filter_top_mul_32dEe_U10;
    delete filter_top_mul_32dEe_U11;
    delete filter_top_mul_32dEe_U12;
    delete filter_top_mul_32dEe_U13;
}

void dummy_proc_be::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dummy_proc_be::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(exitcond_fu_150_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,1,1>(icmp_reg_300.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read())))) {
        i_reg_139 = i_2_reg_285.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_139 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        complex_M_imag_V_wr_reg_378 = p_Val2_1_fu_261_p2.read().range(62, 31);
        complex_M_real_V_wr_reg_373 = p_Val2_s_fu_247_p2.read().range(62, 31);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_2_reg_285 = i_2_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_150_p2.read()))) {
        icmp_reg_300 = icmp_fu_177_p2.read();
        tmp_reg_290 = tmp_fu_162_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_xk1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_xk2_empty_n.read())))) {
        input_xk2_read_reg_324 = input_xk2_dout.read();
        p_r_M_imag_V_reg_319 = input_xk1_dout.read().range(63, 32);
        p_r_M_real_V_reg_314 = p_r_M_real_V_fu_197_p1.read();
        p_y_M_imag_V_read_a_reg_309 = coefs_q0.read().range(63, 32);
        tmp_5_reg_304 = tmp_5_fu_183_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp1_i_i_cast_reg_353 = grp_fu_223_p2.read();
        tmp_1_i_i_cast_reg_358 = grp_fu_229_p2.read();
        tmp_2_i_i_cast_reg_363 = grp_fu_235_p2.read();
        tmp_3_i_i_cast_reg_368 = grp_fu_241_p2.read();
    }
}

void dummy_proc_be::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dummy_proc_be::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void dummy_proc_be::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dummy_proc_be::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dummy_proc_be::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dummy_proc_be::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dummy_proc_be::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void dummy_proc_be::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void dummy_proc_be::thread_ap_block_state10() {
    ap_block_state10 = (esl_seteq<1,1,1>(icmp_reg_300.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read()));
}

void dummy_proc_be::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, input_xk1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_xk2_empty_n.read()));
}

void dummy_proc_be::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_150_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void dummy_proc_be::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dummy_proc_be::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_150_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dummy_proc_be::thread_coefs_address0() {
    coefs_address0 =  (sc_lv<11>) (tmp_fu_162_p1.read());
}

void dummy_proc_be::thread_coefs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        coefs_ce0 = ap_const_logic_1;
    } else {
        coefs_ce0 = ap_const_logic_0;
    }
}

void dummy_proc_be::thread_exitcond_fu_150_p2() {
    exitcond_fu_150_p2 = (!i_reg_139.read().is_01() || !ap_const_lv12_800.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_139.read() == ap_const_lv12_800);
}

void dummy_proc_be::thread_grp_fu_223_p0() {
    grp_fu_223_p0 =  (sc_lv<32>) (tmp_1_fu_211_p1.read());
}

void dummy_proc_be::thread_grp_fu_223_p1() {
    grp_fu_223_p1 =  (sc_lv<32>) (tmp_2_fu_214_p1.read());
}

void dummy_proc_be::thread_grp_fu_229_p0() {
    grp_fu_229_p0 =  (sc_lv<32>) (tmp_3_fu_217_p1.read());
}

void dummy_proc_be::thread_grp_fu_229_p1() {
    grp_fu_229_p1 =  (sc_lv<32>) (tmp_4_fu_220_p1.read());
}

void dummy_proc_be::thread_grp_fu_235_p0() {
    grp_fu_235_p0 =  (sc_lv<32>) (tmp_1_fu_211_p1.read());
}

void dummy_proc_be::thread_grp_fu_235_p1() {
    grp_fu_235_p1 =  (sc_lv<32>) (tmp_4_fu_220_p1.read());
}

void dummy_proc_be::thread_grp_fu_241_p0() {
    grp_fu_241_p0 =  (sc_lv<32>) (tmp_2_fu_214_p1.read());
}

void dummy_proc_be::thread_grp_fu_241_p1() {
    grp_fu_241_p1 =  (sc_lv<32>) (tmp_3_fu_217_p1.read());
}

void dummy_proc_be::thread_i_2_fu_156_p2() {
    i_2_fu_156_p2 = (!i_reg_139.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(i_reg_139.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void dummy_proc_be::thread_icmp_fu_177_p2() {
    icmp_fu_177_p2 = (!tmp_7_fu_167_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_167_p4.read() == ap_const_lv3_0);
}

void dummy_proc_be::thread_input_xk1_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_xk1_blk_n = input_xk1_empty_n.read();
    } else {
        input_xk1_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_be::thread_input_xk1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_xk1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_xk2_empty_n.read())))) {
        input_xk1_read = ap_const_logic_1;
    } else {
        input_xk1_read = ap_const_logic_0;
    }
}

void dummy_proc_be::thread_input_xk2_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_xk2_blk_n = input_xk2_empty_n.read();
    } else {
        input_xk2_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_be::thread_input_xk2_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_xk1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_xk2_empty_n.read())))) {
        input_xk2_read = ap_const_logic_1;
    } else {
        input_xk2_read = ap_const_logic_0;
    }
}

void dummy_proc_be::thread_out_r_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_reg_300.read(), ap_const_lv1_0))) {
        out_r_blk_n = out_r_full_n.read();
    } else {
        out_r_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_be::thread_out_r_din() {
    out_r_din = input_xk2_read_reg_324.read();
}

void dummy_proc_be::thread_out_r_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_reg_300.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_reg_300.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read())))) {
        out_r_write = ap_const_logic_1;
    } else {
        out_r_write = ap_const_logic_0;
    }
}

void dummy_proc_be::thread_output_xk1_address0() {
    output_xk1_address0 =  (sc_lv<11>) (tmp_reg_290.read());
}

void dummy_proc_be::thread_output_xk1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,1,1>(icmp_reg_300.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read())))) {
        output_xk1_ce0 = ap_const_logic_1;
    } else {
        output_xk1_ce0 = ap_const_logic_0;
    }
}

void dummy_proc_be::thread_output_xk1_d0() {
    output_xk1_d0 = esl_concat<32,32>(complex_M_imag_V_wr_reg_378.read(), complex_M_real_V_wr_reg_373.read());
}

void dummy_proc_be::thread_output_xk1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,1,1>(icmp_reg_300.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read())))) {
        output_xk1_we0 = ap_const_logic_1;
    } else {
        output_xk1_we0 = ap_const_logic_0;
    }
}

void dummy_proc_be::thread_p_Val2_1_fu_261_p2() {
    p_Val2_1_fu_261_p2 = (!tmp_3_i_i_cast_reg_368.read().is_01() || !tmp_2_i_i_cast_reg_363.read().is_01())? sc_lv<63>(): (sc_biguint<63>(tmp_3_i_i_cast_reg_368.read()) + sc_biguint<63>(tmp_2_i_i_cast_reg_363.read()));
}

void dummy_proc_be::thread_p_Val2_s_fu_247_p2() {
    p_Val2_s_fu_247_p2 = (!tmp1_i_i_cast_reg_353.read().is_01() || !tmp_1_i_i_cast_reg_358.read().is_01())? sc_lv<63>(): (sc_biguint<63>(tmp1_i_i_cast_reg_353.read()) - sc_biguint<63>(tmp_1_i_i_cast_reg_358.read()));
}

void dummy_proc_be::thread_p_r_M_real_V_fu_197_p1() {
    p_r_M_real_V_fu_197_p1 = input_xk1_dout.read().range(32-1, 0);
}

void dummy_proc_be::thread_tmp_1_fu_211_p1() {
    tmp_1_fu_211_p1 = esl_sext<63,32>(p_r_M_real_V_reg_314.read());
}

void dummy_proc_be::thread_tmp_2_fu_214_p1() {
    tmp_2_fu_214_p1 = esl_sext<63,32>(tmp_5_reg_304.read());
}

void dummy_proc_be::thread_tmp_3_fu_217_p1() {
    tmp_3_fu_217_p1 = esl_sext<63,32>(p_r_M_imag_V_reg_319.read());
}

void dummy_proc_be::thread_tmp_4_fu_220_p1() {
    tmp_4_fu_220_p1 = esl_sext<63,32>(p_y_M_imag_V_read_a_reg_309.read());
}

void dummy_proc_be::thread_tmp_5_fu_183_p1() {
    tmp_5_fu_183_p1 = coefs_q0.read().range(32-1, 0);
}

void dummy_proc_be::thread_tmp_7_fu_167_p4() {
    tmp_7_fu_167_p4 = i_reg_139.read().range(11, 9);
}

void dummy_proc_be::thread_tmp_fu_162_p1() {
    tmp_fu_162_p1 = esl_zext<64,12>(i_reg_139.read());
}

void dummy_proc_be::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_150_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_xk1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_xk2_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(icmp_reg_300.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXX";
            break;
    }
}

}

