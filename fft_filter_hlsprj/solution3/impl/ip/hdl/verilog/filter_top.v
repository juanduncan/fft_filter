// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="filter_top,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k410tffg900-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.375000,HLS_SYN_LAT=6278,HLS_SYN_TPT=6279,HLS_SYN_MEM=58,HLS_SYN_DSP=96,HLS_SYN_FF=36680,HLS_SYN_LUT=30039}" *)

module filter_top (
        coefs_address0,
        coefs_ce0,
        coefs_d0,
        coefs_q0,
        coefs_we0,
        in_r,
        inxn2_address0,
        inxn2_ce0,
        inxn2_d0,
        inxn2_q0,
        inxn2_we0,
        outxk1_address0,
        outxk1_ce0,
        outxk1_d0,
        outxk1_q0,
        outxk1_we0,
        out_r,
        ap_clk,
        ap_rst,
        in_r_ap_vld,
        in_r_ap_ack,
        out_r_ap_vld,
        out_r_ap_ack,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready
);

parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;

output  [10:0] coefs_address0;
output   coefs_ce0;
output  [63:0] coefs_d0;
input  [63:0] coefs_q0;
output   coefs_we0;
input  [63:0] in_r;
output  [10:0] inxn2_address0;
output   inxn2_ce0;
output  [63:0] inxn2_d0;
input  [63:0] inxn2_q0;
output   inxn2_we0;
output  [10:0] outxk1_address0;
output   outxk1_ce0;
output  [63:0] outxk1_d0;
input  [63:0] outxk1_q0;
output   outxk1_we0;
output  [63:0] out_r;
input   ap_clk;
input   ap_rst;
input   in_r_ap_vld;
output   in_r_ap_ack;
output   out_r_ap_vld;
input   out_r_ap_ack;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;

reg ap_idle;
wire    filter_top_dummy_proc_fe_U0_ap_start;
wire    filter_top_dummy_proc_fe_U0_ap_done;
wire    filter_top_dummy_proc_fe_U0_ap_continue;
wire    filter_top_dummy_proc_fe_U0_ap_idle;
wire    filter_top_dummy_proc_fe_U0_ap_ready;
wire   [15:0] filter_top_dummy_proc_fe_U0_config_fwd_data_V_din;
wire    filter_top_dummy_proc_fe_U0_config_fwd_data_V_full_n;
wire    filter_top_dummy_proc_fe_U0_config_fwd_data_V_write;
wire   [15:0] filter_top_dummy_proc_fe_U0_config_inv_data_V_din;
wire    filter_top_dummy_proc_fe_U0_config_inv_data_V_full_n;
wire    filter_top_dummy_proc_fe_U0_config_inv_data_V_write;
wire   [63:0] filter_top_dummy_proc_fe_U0_in_r;
wire    filter_top_dummy_proc_fe_U0_in_r_ap_vld;
wire    filter_top_dummy_proc_fe_U0_in_r_ap_ack;
wire   [10:0] filter_top_dummy_proc_fe_U0_input_xn2_address0;
wire    filter_top_dummy_proc_fe_U0_input_xn2_ce0;
wire   [63:0] filter_top_dummy_proc_fe_U0_input_xn2_q0;
wire   [63:0] filter_top_dummy_proc_fe_U0_output_xn1_din;
wire    filter_top_dummy_proc_fe_U0_output_xn1_full_n;
wire    filter_top_dummy_proc_fe_U0_output_xn1_write;
wire   [63:0] filter_top_dummy_proc_fe_U0_output_xn2_din;
wire    filter_top_dummy_proc_fe_U0_output_xn2_full_n;
wire    filter_top_dummy_proc_fe_U0_output_xn2_write;
reg    fft_config1_U0_ap_start = 1'b0;
wire    fft_config1_U0_ap_ce;
wire    fft_config1_U0_ap_done;
wire    fft_config1_U0_ap_idle;
wire    fft_config1_U0_ap_ready;
wire   [63:0] fft_config1_U0_xn_dout;
wire    fft_config1_U0_xn_empty_n;
wire    fft_config1_U0_xn_read;
wire   [63:0] fft_config1_U0_xk_din;
wire    fft_config1_U0_xk_full_n;
wire    fft_config1_U0_xk_write;
wire   [7:0] fft_config1_U0_status_data_V_din;
wire    fft_config1_U0_status_data_V_full_n;
wire    fft_config1_U0_status_data_V_write;
wire   [15:0] fft_config1_U0_config_ch_data_V_dout;
wire    fft_config1_U0_config_ch_data_V_empty_n;
wire    fft_config1_U0_config_ch_data_V_read;
wire    fft_config1_U0_ap_continue;
reg    fft_config2_U0_ap_start = 1'b0;
wire    fft_config2_U0_ap_ce;
wire    fft_config2_U0_ap_done;
wire    fft_config2_U0_ap_idle;
wire    fft_config2_U0_ap_ready;
wire   [63:0] fft_config2_U0_xn_dout;
wire    fft_config2_U0_xn_empty_n;
wire    fft_config2_U0_xn_read;
wire   [63:0] fft_config2_U0_xk_din;
wire    fft_config2_U0_xk_full_n;
wire    fft_config2_U0_xk_write;
wire   [7:0] fft_config2_U0_status_data_V_din;
wire    fft_config2_U0_status_data_V_full_n;
wire    fft_config2_U0_status_data_V_write;
wire   [15:0] fft_config2_U0_config_ch_data_V_dout;
wire    fft_config2_U0_config_ch_data_V_empty_n;
wire    fft_config2_U0_config_ch_data_V_read;
wire    fft_config2_U0_ap_continue;
wire    filter_top_dummy_proc_be_U0_ap_start;
wire    filter_top_dummy_proc_be_U0_ap_done;
wire    filter_top_dummy_proc_be_U0_ap_continue;
wire    filter_top_dummy_proc_be_U0_ap_idle;
wire    filter_top_dummy_proc_be_U0_ap_ready;
wire   [10:0] filter_top_dummy_proc_be_U0_coefs_address0;
wire    filter_top_dummy_proc_be_U0_coefs_ce0;
wire   [63:0] filter_top_dummy_proc_be_U0_coefs_q0;
wire   [63:0] filter_top_dummy_proc_be_U0_input_xk1_dout;
wire    filter_top_dummy_proc_be_U0_input_xk1_empty_n;
wire    filter_top_dummy_proc_be_U0_input_xk1_read;
wire   [63:0] filter_top_dummy_proc_be_U0_input_xk2_dout;
wire    filter_top_dummy_proc_be_U0_input_xk2_empty_n;
wire    filter_top_dummy_proc_be_U0_input_xk2_read;
wire   [10:0] filter_top_dummy_proc_be_U0_output_xk1_address0;
wire    filter_top_dummy_proc_be_U0_output_xk1_ce0;
wire    filter_top_dummy_proc_be_U0_output_xk1_we0;
wire   [63:0] filter_top_dummy_proc_be_U0_output_xk1_d0;
wire   [63:0] filter_top_dummy_proc_be_U0_out_r;
wire    filter_top_dummy_proc_be_U0_out_r_ap_vld;
wire    filter_top_dummy_proc_be_U0_out_r_ap_ack;
wire    ap_sig_hs_continue;
wire    fft_config_fwd_data_V_U_ap_dummy_ce;
wire   [15:0] fft_config_fwd_data_V_din;
wire    fft_config_fwd_data_V_full_n;
wire    fft_config_fwd_data_V_write;
wire   [15:0] fft_config_fwd_data_V_dout;
wire    fft_config_fwd_data_V_empty_n;
wire    fft_config_fwd_data_V_read;
wire    fft_config_inv_data_V_U_ap_dummy_ce;
wire   [15:0] fft_config_inv_data_V_din;
wire    fft_config_inv_data_V_full_n;
wire    fft_config_inv_data_V_write;
wire   [15:0] fft_config_inv_data_V_dout;
wire    fft_config_inv_data_V_empty_n;
wire    fft_config_inv_data_V_read;
wire    xn_channel_U_ap_dummy_ce;
wire   [63:0] xn_channel_din;
wire    xn_channel_full_n;
wire    xn_channel_write;
wire   [63:0] xn_channel_dout;
wire    xn_channel_empty_n;
wire    xn_channel_read;
wire    xn2_channel_U_ap_dummy_ce;
wire   [63:0] xn2_channel_din;
wire    xn2_channel_full_n;
wire    xn2_channel_write;
wire   [63:0] xn2_channel_dout;
wire    xn2_channel_empty_n;
wire    xn2_channel_read;
wire    xk_channel_U_ap_dummy_ce;
wire   [63:0] xk_channel_din;
wire    xk_channel_full_n;
wire    xk_channel_write;
wire   [63:0] xk_channel_dout;
wire    xk_channel_empty_n;
wire    xk_channel_read;
wire    xk2_channel_U_ap_dummy_ce;
wire   [63:0] xk2_channel_din;
wire    xk2_channel_full_n;
wire    xk2_channel_write;
wire   [63:0] xk2_channel_dout;
wire    xk2_channel_empty_n;
wire    xk2_channel_read;
reg    ap_reg_procdone_filter_top_dummy_proc_fe_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_fft_config1_U0 = 1'b0;
reg    ap_reg_procdone_fft_config2_U0 = 1'b0;
reg    ap_reg_procdone_filter_top_dummy_proc_be_U0 = 1'b0;
reg    ap_CS;
reg    ap_sig_top_allready;
reg    ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready = 1'b0;
reg    ap_sig_ready_filter_top_dummy_proc_fe_U0_ap_ready;
reg    ap_sig_start_in_filter_top_dummy_proc_fe_U0_ap_start;
reg    ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready = 1'b0;
reg    ap_sig_ready_filter_top_dummy_proc_be_U0_ap_ready;
reg    ap_sig_start_in_filter_top_dummy_proc_be_U0_ap_start;


filter_top_dummy_proc_fe filter_top_dummy_proc_fe_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( filter_top_dummy_proc_fe_U0_ap_start ),
    .ap_done( filter_top_dummy_proc_fe_U0_ap_done ),
    .ap_continue( filter_top_dummy_proc_fe_U0_ap_continue ),
    .ap_idle( filter_top_dummy_proc_fe_U0_ap_idle ),
    .ap_ready( filter_top_dummy_proc_fe_U0_ap_ready ),
    .config_fwd_data_V_din( filter_top_dummy_proc_fe_U0_config_fwd_data_V_din ),
    .config_fwd_data_V_full_n( filter_top_dummy_proc_fe_U0_config_fwd_data_V_full_n ),
    .config_fwd_data_V_write( filter_top_dummy_proc_fe_U0_config_fwd_data_V_write ),
    .config_inv_data_V_din( filter_top_dummy_proc_fe_U0_config_inv_data_V_din ),
    .config_inv_data_V_full_n( filter_top_dummy_proc_fe_U0_config_inv_data_V_full_n ),
    .config_inv_data_V_write( filter_top_dummy_proc_fe_U0_config_inv_data_V_write ),
    .in_r( filter_top_dummy_proc_fe_U0_in_r ),
    .in_r_ap_vld( filter_top_dummy_proc_fe_U0_in_r_ap_vld ),
    .in_r_ap_ack( filter_top_dummy_proc_fe_U0_in_r_ap_ack ),
    .input_xn2_address0( filter_top_dummy_proc_fe_U0_input_xn2_address0 ),
    .input_xn2_ce0( filter_top_dummy_proc_fe_U0_input_xn2_ce0 ),
    .input_xn2_q0( filter_top_dummy_proc_fe_U0_input_xn2_q0 ),
    .output_xn1_din( filter_top_dummy_proc_fe_U0_output_xn1_din ),
    .output_xn1_full_n( filter_top_dummy_proc_fe_U0_output_xn1_full_n ),
    .output_xn1_write( filter_top_dummy_proc_fe_U0_output_xn1_write ),
    .output_xn2_din( filter_top_dummy_proc_fe_U0_output_xn2_din ),
    .output_xn2_full_n( filter_top_dummy_proc_fe_U0_output_xn2_full_n ),
    .output_xn2_write( filter_top_dummy_proc_fe_U0_output_xn2_write )
);

fft_config1_s fft_config1_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( fft_config1_U0_ap_start ),
    .ap_ce( fft_config1_U0_ap_ce ),
    .ap_done( fft_config1_U0_ap_done ),
    .ap_idle( fft_config1_U0_ap_idle ),
    .ap_ready( fft_config1_U0_ap_ready ),
    .xn_dout( fft_config1_U0_xn_dout ),
    .xn_empty_n( fft_config1_U0_xn_empty_n ),
    .xn_read( fft_config1_U0_xn_read ),
    .xk_din( fft_config1_U0_xk_din ),
    .xk_full_n( fft_config1_U0_xk_full_n ),
    .xk_write( fft_config1_U0_xk_write ),
    .status_data_V_din( fft_config1_U0_status_data_V_din ),
    .status_data_V_full_n( fft_config1_U0_status_data_V_full_n ),
    .status_data_V_write( fft_config1_U0_status_data_V_write ),
    .config_ch_data_V_dout( fft_config1_U0_config_ch_data_V_dout ),
    .config_ch_data_V_empty_n( fft_config1_U0_config_ch_data_V_empty_n ),
    .config_ch_data_V_read( fft_config1_U0_config_ch_data_V_read )
);

fft_config2_s fft_config2_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( fft_config2_U0_ap_start ),
    .ap_ce( fft_config2_U0_ap_ce ),
    .ap_done( fft_config2_U0_ap_done ),
    .ap_idle( fft_config2_U0_ap_idle ),
    .ap_ready( fft_config2_U0_ap_ready ),
    .xn_dout( fft_config2_U0_xn_dout ),
    .xn_empty_n( fft_config2_U0_xn_empty_n ),
    .xn_read( fft_config2_U0_xn_read ),
    .xk_din( fft_config2_U0_xk_din ),
    .xk_full_n( fft_config2_U0_xk_full_n ),
    .xk_write( fft_config2_U0_xk_write ),
    .status_data_V_din( fft_config2_U0_status_data_V_din ),
    .status_data_V_full_n( fft_config2_U0_status_data_V_full_n ),
    .status_data_V_write( fft_config2_U0_status_data_V_write ),
    .config_ch_data_V_dout( fft_config2_U0_config_ch_data_V_dout ),
    .config_ch_data_V_empty_n( fft_config2_U0_config_ch_data_V_empty_n ),
    .config_ch_data_V_read( fft_config2_U0_config_ch_data_V_read )
);

filter_top_dummy_proc_be filter_top_dummy_proc_be_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( filter_top_dummy_proc_be_U0_ap_start ),
    .ap_done( filter_top_dummy_proc_be_U0_ap_done ),
    .ap_continue( filter_top_dummy_proc_be_U0_ap_continue ),
    .ap_idle( filter_top_dummy_proc_be_U0_ap_idle ),
    .ap_ready( filter_top_dummy_proc_be_U0_ap_ready ),
    .coefs_address0( filter_top_dummy_proc_be_U0_coefs_address0 ),
    .coefs_ce0( filter_top_dummy_proc_be_U0_coefs_ce0 ),
    .coefs_q0( filter_top_dummy_proc_be_U0_coefs_q0 ),
    .input_xk1_dout( filter_top_dummy_proc_be_U0_input_xk1_dout ),
    .input_xk1_empty_n( filter_top_dummy_proc_be_U0_input_xk1_empty_n ),
    .input_xk1_read( filter_top_dummy_proc_be_U0_input_xk1_read ),
    .input_xk2_dout( filter_top_dummy_proc_be_U0_input_xk2_dout ),
    .input_xk2_empty_n( filter_top_dummy_proc_be_U0_input_xk2_empty_n ),
    .input_xk2_read( filter_top_dummy_proc_be_U0_input_xk2_read ),
    .output_xk1_address0( filter_top_dummy_proc_be_U0_output_xk1_address0 ),
    .output_xk1_ce0( filter_top_dummy_proc_be_U0_output_xk1_ce0 ),
    .output_xk1_we0( filter_top_dummy_proc_be_U0_output_xk1_we0 ),
    .output_xk1_d0( filter_top_dummy_proc_be_U0_output_xk1_d0 ),
    .out_r( filter_top_dummy_proc_be_U0_out_r ),
    .out_r_ap_vld( filter_top_dummy_proc_be_U0_out_r_ap_vld ),
    .out_r_ap_ack( filter_top_dummy_proc_be_U0_out_r_ap_ack )
);

FIFO_filter_top_fft_config_fwd_data_V fft_config_fwd_data_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( fft_config_fwd_data_V_U_ap_dummy_ce ),
    .if_write_ce( fft_config_fwd_data_V_U_ap_dummy_ce ),
    .if_din( fft_config_fwd_data_V_din ),
    .if_full_n( fft_config_fwd_data_V_full_n ),
    .if_write( fft_config_fwd_data_V_write ),
    .if_dout( fft_config_fwd_data_V_dout ),
    .if_empty_n( fft_config_fwd_data_V_empty_n ),
    .if_read( fft_config_fwd_data_V_read )
);

FIFO_filter_top_fft_config_inv_data_V fft_config_inv_data_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( fft_config_inv_data_V_U_ap_dummy_ce ),
    .if_write_ce( fft_config_inv_data_V_U_ap_dummy_ce ),
    .if_din( fft_config_inv_data_V_din ),
    .if_full_n( fft_config_inv_data_V_full_n ),
    .if_write( fft_config_inv_data_V_write ),
    .if_dout( fft_config_inv_data_V_dout ),
    .if_empty_n( fft_config_inv_data_V_empty_n ),
    .if_read( fft_config_inv_data_V_read )
);

FIFO_filter_top_xn_channel xn_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( xn_channel_U_ap_dummy_ce ),
    .if_write_ce( xn_channel_U_ap_dummy_ce ),
    .if_din( xn_channel_din ),
    .if_full_n( xn_channel_full_n ),
    .if_write( xn_channel_write ),
    .if_dout( xn_channel_dout ),
    .if_empty_n( xn_channel_empty_n ),
    .if_read( xn_channel_read )
);

FIFO_filter_top_xn2_channel xn2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( xn2_channel_U_ap_dummy_ce ),
    .if_write_ce( xn2_channel_U_ap_dummy_ce ),
    .if_din( xn2_channel_din ),
    .if_full_n( xn2_channel_full_n ),
    .if_write( xn2_channel_write ),
    .if_dout( xn2_channel_dout ),
    .if_empty_n( xn2_channel_empty_n ),
    .if_read( xn2_channel_read )
);

FIFO_filter_top_xk_channel xk_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( xk_channel_U_ap_dummy_ce ),
    .if_write_ce( xk_channel_U_ap_dummy_ce ),
    .if_din( xk_channel_din ),
    .if_full_n( xk_channel_full_n ),
    .if_write( xk_channel_write ),
    .if_dout( xk_channel_dout ),
    .if_empty_n( xk_channel_empty_n ),
    .if_read( xk_channel_read )
);

FIFO_filter_top_xk2_channel xk2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( xk2_channel_U_ap_dummy_ce ),
    .if_write_ce( xk2_channel_U_ap_dummy_ce ),
    .if_din( xk2_channel_din ),
    .if_full_n( xk2_channel_full_n ),
    .if_write( xk2_channel_write ),
    .if_dout( xk2_channel_dout ),
    .if_empty_n( xk2_channel_empty_n ),
    .if_read( xk2_channel_read )
);



/// ap_reg_procdone_fft_config1_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_fft_config1_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_fft_config1_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_fft_config1_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == fft_config1_U0_ap_done)) begin
            ap_reg_procdone_fft_config1_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_fft_config2_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_fft_config2_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_fft_config2_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_fft_config2_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == fft_config2_U0_ap_done)) begin
            ap_reg_procdone_fft_config2_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_filter_top_dummy_proc_be_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_filter_top_dummy_proc_be_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_filter_top_dummy_proc_be_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_filter_top_dummy_proc_be_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == filter_top_dummy_proc_be_U0_ap_done)) begin
            ap_reg_procdone_filter_top_dummy_proc_be_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_filter_top_dummy_proc_fe_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_filter_top_dummy_proc_fe_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_filter_top_dummy_proc_fe_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_filter_top_dummy_proc_fe_U0 <= ap_const_logic_0;
        end else if ((filter_top_dummy_proc_fe_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_filter_top_dummy_proc_fe_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == filter_top_dummy_proc_be_U0_ap_ready)) begin
            ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready <= ap_const_logic_0;
        end else if ((filter_top_dummy_proc_fe_U0_ap_ready == ap_const_logic_1)) begin
            ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// fft_config1_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_fft_config1_U0_ap_start
    if (ap_rst == 1'b1) begin
        fft_config1_U0_ap_start <= ap_const_logic_0;
    end else begin
        fft_config1_U0_ap_start <= ap_const_logic_1;
    end
end

/// fft_config2_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_fft_config2_U0_ap_start
    if (ap_rst == 1'b1) begin
        fft_config2_U0_ap_start <= ap_const_logic_0;
    end else begin
        fft_config2_U0_ap_start <= ap_const_logic_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_idle assign process. ///
always @ (filter_top_dummy_proc_fe_U0_ap_idle or fft_config1_U0_ap_idle or fft_config2_U0_ap_idle or filter_top_dummy_proc_be_U0_ap_idle)
begin
    if (((filter_top_dummy_proc_fe_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == fft_config1_U0_ap_idle) & (ap_const_logic_1 == fft_config2_U0_ap_idle) & (ap_const_logic_1 == filter_top_dummy_proc_be_U0_ap_idle))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (filter_top_dummy_proc_be_U0_ap_done)
begin
    if ((ap_const_logic_1 == filter_top_dummy_proc_be_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_filter_top_dummy_proc_be_U0_ap_ready assign process. ///
always @ (filter_top_dummy_proc_be_U0_ap_ready or ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready)) begin
        ap_sig_ready_filter_top_dummy_proc_be_U0_ap_ready = filter_top_dummy_proc_be_U0_ap_ready;
    end else begin
        ap_sig_ready_filter_top_dummy_proc_be_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_filter_top_dummy_proc_fe_U0_ap_ready assign process. ///
always @ (filter_top_dummy_proc_fe_U0_ap_ready or ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready)) begin
        ap_sig_ready_filter_top_dummy_proc_fe_U0_ap_ready = filter_top_dummy_proc_fe_U0_ap_ready;
    end else begin
        ap_sig_ready_filter_top_dummy_proc_fe_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_start_in_filter_top_dummy_proc_be_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_filter_top_dummy_proc_be_U0_ap_ready))) begin
        ap_sig_start_in_filter_top_dummy_proc_be_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_filter_top_dummy_proc_be_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_filter_top_dummy_proc_fe_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready)
begin
    if (((ap_const_logic_0 == ap_reg_ready_filter_top_dummy_proc_fe_U0_ap_ready) & (ap_const_logic_1 == ap_start))) begin
        ap_sig_start_in_filter_top_dummy_proc_fe_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_filter_top_dummy_proc_fe_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_top_allready assign process. ///
always @ (ap_sig_ready_filter_top_dummy_proc_fe_U0_ap_ready or ap_sig_ready_filter_top_dummy_proc_be_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_sig_ready_filter_top_dummy_proc_fe_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_filter_top_dummy_proc_be_U0_ap_ready))) begin
        ap_sig_top_allready = ap_const_logic_1;
    end else begin
        ap_sig_top_allready = ap_const_logic_0;
    end
end
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;
assign ap_sig_hs_continue = ap_const_logic_1;
assign coefs_address0 = filter_top_dummy_proc_be_U0_coefs_address0;
assign coefs_ce0 = filter_top_dummy_proc_be_U0_coefs_ce0;
assign coefs_d0 = ap_const_lv64_0;
assign coefs_we0 = ap_const_logic_0;
assign fft_config1_U0_ap_ce = ap_const_logic_1;
assign fft_config1_U0_ap_continue = ap_const_logic_1;
assign fft_config1_U0_config_ch_data_V_dout = fft_config_fwd_data_V_dout;
assign fft_config1_U0_config_ch_data_V_empty_n = fft_config_fwd_data_V_empty_n;
assign fft_config1_U0_status_data_V_full_n = ap_const_logic_1;
assign fft_config1_U0_xk_full_n = xk_channel_full_n;
assign fft_config1_U0_xn_dout = xn_channel_dout;
assign fft_config1_U0_xn_empty_n = xn_channel_empty_n;
assign fft_config2_U0_ap_ce = ap_const_logic_1;
assign fft_config2_U0_ap_continue = ap_const_logic_1;
assign fft_config2_U0_config_ch_data_V_dout = fft_config_inv_data_V_dout;
assign fft_config2_U0_config_ch_data_V_empty_n = fft_config_inv_data_V_empty_n;
assign fft_config2_U0_status_data_V_full_n = ap_const_logic_1;
assign fft_config2_U0_xk_full_n = xk2_channel_full_n;
assign fft_config2_U0_xn_dout = xn2_channel_dout;
assign fft_config2_U0_xn_empty_n = xn2_channel_empty_n;
assign fft_config_fwd_data_V_U_ap_dummy_ce = ap_const_logic_1;
assign fft_config_fwd_data_V_din = filter_top_dummy_proc_fe_U0_config_fwd_data_V_din;
assign fft_config_fwd_data_V_read = fft_config1_U0_config_ch_data_V_read;
assign fft_config_fwd_data_V_write = filter_top_dummy_proc_fe_U0_config_fwd_data_V_write;
assign fft_config_inv_data_V_U_ap_dummy_ce = ap_const_logic_1;
assign fft_config_inv_data_V_din = filter_top_dummy_proc_fe_U0_config_inv_data_V_din;
assign fft_config_inv_data_V_read = fft_config2_U0_config_ch_data_V_read;
assign fft_config_inv_data_V_write = filter_top_dummy_proc_fe_U0_config_inv_data_V_write;
assign filter_top_dummy_proc_be_U0_ap_continue = ap_sig_hs_continue;
assign filter_top_dummy_proc_be_U0_ap_start = ap_sig_start_in_filter_top_dummy_proc_be_U0_ap_start;
assign filter_top_dummy_proc_be_U0_coefs_q0 = coefs_q0;
assign filter_top_dummy_proc_be_U0_input_xk1_dout = xk_channel_dout;
assign filter_top_dummy_proc_be_U0_input_xk1_empty_n = xk_channel_empty_n;
assign filter_top_dummy_proc_be_U0_input_xk2_dout = xk2_channel_dout;
assign filter_top_dummy_proc_be_U0_input_xk2_empty_n = xk2_channel_empty_n;
assign filter_top_dummy_proc_be_U0_out_r_ap_ack = out_r_ap_ack;
assign filter_top_dummy_proc_fe_U0_ap_continue = ap_const_logic_1;
assign filter_top_dummy_proc_fe_U0_ap_start = ap_sig_start_in_filter_top_dummy_proc_fe_U0_ap_start;
assign filter_top_dummy_proc_fe_U0_config_fwd_data_V_full_n = fft_config_fwd_data_V_full_n;
assign filter_top_dummy_proc_fe_U0_config_inv_data_V_full_n = fft_config_inv_data_V_full_n;
assign filter_top_dummy_proc_fe_U0_in_r = in_r;
assign filter_top_dummy_proc_fe_U0_in_r_ap_vld = in_r_ap_vld;
assign filter_top_dummy_proc_fe_U0_input_xn2_q0 = inxn2_q0;
assign filter_top_dummy_proc_fe_U0_output_xn1_full_n = xn_channel_full_n;
assign filter_top_dummy_proc_fe_U0_output_xn2_full_n = xn2_channel_full_n;
assign in_r_ap_ack = filter_top_dummy_proc_fe_U0_in_r_ap_ack;
assign inxn2_address0 = filter_top_dummy_proc_fe_U0_input_xn2_address0;
assign inxn2_ce0 = filter_top_dummy_proc_fe_U0_input_xn2_ce0;
assign inxn2_d0 = ap_const_lv64_0;
assign inxn2_we0 = ap_const_logic_0;
assign out_r = filter_top_dummy_proc_be_U0_out_r;
assign out_r_ap_vld = filter_top_dummy_proc_be_U0_out_r_ap_vld;
assign outxk1_address0 = filter_top_dummy_proc_be_U0_output_xk1_address0;
assign outxk1_ce0 = filter_top_dummy_proc_be_U0_output_xk1_ce0;
assign outxk1_d0 = filter_top_dummy_proc_be_U0_output_xk1_d0;
assign outxk1_we0 = filter_top_dummy_proc_be_U0_output_xk1_we0;
assign xk2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign xk2_channel_din = fft_config2_U0_xk_din;
assign xk2_channel_read = filter_top_dummy_proc_be_U0_input_xk2_read;
assign xk2_channel_write = fft_config2_U0_xk_write;
assign xk_channel_U_ap_dummy_ce = ap_const_logic_1;
assign xk_channel_din = fft_config1_U0_xk_din;
assign xk_channel_read = filter_top_dummy_proc_be_U0_input_xk1_read;
assign xk_channel_write = fft_config1_U0_xk_write;
assign xn2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign xn2_channel_din = filter_top_dummy_proc_fe_U0_output_xn2_din;
assign xn2_channel_read = fft_config2_U0_xn_read;
assign xn2_channel_write = filter_top_dummy_proc_fe_U0_output_xn2_write;
assign xn_channel_U_ap_dummy_ce = ap_const_logic_1;
assign xn_channel_din = filter_top_dummy_proc_fe_U0_output_xn1_din;
assign xn_channel_read = fft_config1_U0_xn_read;
assign xn_channel_write = filter_top_dummy_proc_fe_U0_output_xn1_write;


endmodule //filter_top

