// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _filter_top_dummy_proc_fe_HH_
#define _filter_top_dummy_proc_fe_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "filter_top_dummy_proc_fe_detector_tail_M_real_V.h"

namespace ap_rtl {

struct filter_top_dummy_proc_fe : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > config_fwd_data_V_din;
    sc_in< sc_logic > config_fwd_data_V_full_n;
    sc_out< sc_logic > config_fwd_data_V_write;
    sc_out< sc_lv<16> > config_inv_data_V_din;
    sc_in< sc_logic > config_inv_data_V_full_n;
    sc_out< sc_logic > config_inv_data_V_write;
    sc_in< sc_lv<64> > in_r;
    sc_in< sc_logic > in_r_ap_vld;
    sc_out< sc_logic > in_r_ap_ack;
    sc_out< sc_lv<11> > input_xn2_address0;
    sc_out< sc_logic > input_xn2_ce0;
    sc_in< sc_lv<64> > input_xn2_q0;
    sc_out< sc_lv<64> > output_xn1_din;
    sc_in< sc_logic > output_xn1_full_n;
    sc_out< sc_logic > output_xn1_write;
    sc_out< sc_lv<64> > output_xn2_din;
    sc_in< sc_logic > output_xn2_full_n;
    sc_out< sc_logic > output_xn2_write;


    // Module declarations
    filter_top_dummy_proc_fe(sc_module_name name);
    SC_HAS_PROCESS(filter_top_dummy_proc_fe);

    ~filter_top_dummy_proc_fe();

    sc_trace_file* mVcdFile;

    filter_top_dummy_proc_fe_detector_tail_M_real_V* detector_tail_M_real_V_U;
    filter_top_dummy_proc_fe_detector_tail_M_real_V* detector_tail_M_imag_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_25;
    sc_signal< sc_lv<9> > detector_tail_M_real_V_address0;
    sc_signal< sc_logic > detector_tail_M_real_V_ce0;
    sc_signal< sc_logic > detector_tail_M_real_V_we0;
    sc_signal< sc_lv<32> > detector_tail_M_real_V_d0;
    sc_signal< sc_lv<32> > detector_tail_M_real_V_q0;
    sc_signal< sc_lv<9> > detector_tail_M_imag_V_address0;
    sc_signal< sc_logic > detector_tail_M_imag_V_ce0;
    sc_signal< sc_logic > detector_tail_M_imag_V_we0;
    sc_signal< sc_lv<32> > detector_tail_M_imag_V_d0;
    sc_signal< sc_lv<32> > detector_tail_M_imag_V_q0;
    sc_signal< sc_lv<12> > i_1_fu_216_p2;
    sc_signal< sc_lv<12> > i_1_reg_285;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_82;
    sc_signal< sc_lv<64> > tmp_fu_222_p1;
    sc_signal< sc_lv<64> > tmp_reg_290;
    sc_signal< sc_lv<1> > exitcond_fu_210_p2;
    sc_signal< sc_lv<64> > input_xn2_load_reg_301;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_98;
    sc_signal< sc_lv<1> > icmp_fu_237_p2;
    sc_signal< sc_lv<1> > icmp_reg_306;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_107;
    sc_signal< bool > ap_sig_bdd_117;
    sc_signal< sc_lv<32> > detector_tail_M_real_V_load_reg_323;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_132;
    sc_signal< sc_lv<32> > detector_tail_M_imag_V_load_reg_328;
    sc_signal< sc_lv<12> > i_reg_171;
    sc_signal< bool > ap_sig_bdd_145;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_153;
    sc_signal< bool > ap_sig_bdd_158;
    sc_signal< sc_lv<64> > tmp_6_fu_269_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_259_p2;
    sc_signal< sc_lv<64> > output_xn1_M_imag_V_addr_fu_275_p3;
    sc_signal< sc_lv<3> > tmp_1_fu_227_p4;
    sc_signal< sc_lv<9> > tmp_3_fu_265_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_167;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_st5_fsm_4;
    static const sc_lv<6> ap_ST_st6_fsm_5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<13> ap_const_lv13_C3F;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<13> ap_const_lv13_2;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<12> ap_const_lv12_5FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_107();
    void thread_ap_sig_bdd_117();
    void thread_ap_sig_bdd_132();
    void thread_ap_sig_bdd_145();
    void thread_ap_sig_bdd_153();
    void thread_ap_sig_bdd_158();
    void thread_ap_sig_bdd_167();
    void thread_ap_sig_bdd_25();
    void thread_ap_sig_bdd_82();
    void thread_ap_sig_bdd_98();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_config_fwd_data_V_din();
    void thread_config_fwd_data_V_write();
    void thread_config_inv_data_V_din();
    void thread_config_inv_data_V_write();
    void thread_detector_tail_M_imag_V_address0();
    void thread_detector_tail_M_imag_V_ce0();
    void thread_detector_tail_M_imag_V_d0();
    void thread_detector_tail_M_imag_V_we0();
    void thread_detector_tail_M_real_V_address0();
    void thread_detector_tail_M_real_V_ce0();
    void thread_detector_tail_M_real_V_d0();
    void thread_detector_tail_M_real_V_we0();
    void thread_exitcond_fu_210_p2();
    void thread_i_1_fu_216_p2();
    void thread_icmp_fu_237_p2();
    void thread_in_r_ap_ack();
    void thread_input_xn2_address0();
    void thread_input_xn2_ce0();
    void thread_output_xn1_M_imag_V_addr_fu_275_p3();
    void thread_output_xn1_din();
    void thread_output_xn1_write();
    void thread_output_xn2_din();
    void thread_output_xn2_write();
    void thread_tmp_1_fu_227_p4();
    void thread_tmp_3_fu_265_p1();
    void thread_tmp_4_fu_259_p2();
    void thread_tmp_6_fu_269_p1();
    void thread_tmp_fu_222_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
